
\echo
\echo *****  Creating view:  "WM_IB_OB_APPT_VW"

CREATE or replace VIEW  WM_IB_OB_APPT_VW
(
     LOCATION_ID,
     WM_APPOINTMENT_ID,
     WM_APPT_OBJ_TYPE,
     WM_APPT_OBJ_ID,
     ASN_ID,
     PURCHASE_ORDERS_ID,
     ORDER_ID,
     SHIPMENT_ID,
     WM_COMPANY_ID,
     SCHEDULED_TSTMP,
     APPT_STATUS,
     APPT_TYPE,
     WM_CARRIER_ID,
     DOCK_DOOR,
     TRAILERNUMBER,
     TRAILERID,
     WM_CARRIER_CD,
     TRLR_LOCN,
     EQUIP_TYPE,
     TRLR_TYPE
) AS
(SELECT DISTINCT A1.LOCATION_ID, A1.WM_APPOINTMENT_ID, A9.WM_APPT_OBJ_TYPE, A9.WM_APPT_OBJ_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '10'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS ASN_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '40'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS PURCHASE_ORDERS_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '20'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS ORDER_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '30'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS SHIPMENT_ID, A1.WM_COMPANY_ID, A1.SCHEDULED_TSTMP, A10.WM_ILM_APPT_STATUS_DESC AS APPT_STATUS, A11.WM_APPT_TYPE_DESC AS APPT_TYPE, A3.WM_CARRIER_ID, A12.WM_DOCK_DOOR_DESC AS DOCK_DOOR, A3.EQUIP_INST_REF_CARRIER AS TRAILERNUMBER, (A2.WM_EQUIPMENT_INSTANCE_ID)::NUMERIC(12,0) AS TRAILERID, A5.WM_CARRIER_CD, A7.WM_LOCN_BRCD AS TRLR_LOCN, A4.WM_EQUIPMENT_DESC AS EQUIP_TYPE, A8.WM_TRAILER_TYPE_DESC AS TRLR_TYPE FROM (((((((((((ADMIN.WM_ILM_APPOINTMENTS A1 LEFT JOIN ADMIN.WM_ILM_APPT_EQUIPMENTS A2 ON ((((A1.WM_APPOINTMENT_ID = A1.WM_APPOINTMENT_ID) AND (A1.WM_COMPANY_ID = A2.WM_COMPANY_ID)) AND (A1.LOCATION_ID = A2.LOCATION_ID)))) LEFT JOIN ADMIN.WM_EQUIPMENT_INSTANCE A3 ON (((A2.WM_EQUIPMENT_INSTANCE_ID = A3.WM_EQUIPMENT_INSTANCE_ID) AND (A2.LOCATION_ID = A3.LOCATION_ID)))) LEFT JOIN ADMIN.WM_EQUIPMENT A4 ON ((((A3.WM_EQUIPMENT_ID = A4.WM_EQUIPMENT_ID) AND (A3.LOCATION_ID = A4.LOCATION_ID)) AND (A4.WM_EQUIPMENT_TYPE_ID = '16'::NUMERIC(2,0))))) LEFT JOIN ADMIN.WM_CARRIER_CODE A5 ON (((A3.WM_CARRIER_ID = A5.WM_CARRIER_ID) AND (A3.LOCATION_ID = A5.LOCATION_ID)))) LEFT JOIN ADMIN.WM_TRAILER_REF A6 ON (((A2.WM_EQUIPMENT_INSTANCE_ID = A6.WM_TRAILER_ID) AND (A2.LOCATION_ID = A6.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LOCN_HDR A7 ON (((A6.WM_CURRENT_LOCATION_ID = A7.WM_LOCN_ID) AND (A6.LOCATION_ID = A7.LOCATION_ID)))) LEFT JOIN ADMIN.WM_TRAILER_TYPE A8 ON (((A4.WM_TRAILER_TYPE_ID = A8.WM_TRAILER_TYPE_ID) AND (A4.LOCATION_ID = A8.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ILM_APPOINTMENT_OBJECTS A9 ON (((A1.WM_APPOINTMENT_ID = A9.WM_APPOINTMENT_ID) AND (A1.LOCATION_ID = A9.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ILM_APPOINTMENT_STATUS A10 ON (((A1.WM_APPT_STATUS = A10.WM_ILM_APPT_STATUS_CD) AND (A1.LOCATION_ID = A10.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ILM_APPOINTMENT_TYPE A11 ON (((A1.WM_APPT_TYPE = A11.WM_APPT_TYPE_ID) AND (A1.LOCATION_ID = A11.LOCATION_ID)))) LEFT JOIN ADMIN.WM_DOCK_DOOR A12 ON ((("NUMERIC"(A1.WM_DOCK_DOOR_ID, 655372) = A12.WM_DOCK_DOOR_ID) AND (A1.LOCATION_ID = A12.LOCATION_ID)))) WHERE (((NOT (EXISTS (SELECT 1 FROM ADMIN.WM_ILM_YARD_ACTIVITY IYA WHERE (((IYA.WM_APPOINTMENT_ID = A1.WM_APPOINTMENT_ID) AND (IYA.LOCATION_ID = A1.LOCATION_ID)) AND (IYA.WM_ACTIVITY_TYPE_ID = '50'::NUMERIC(2,0)))))) AND (CASE WHEN (A2.DELETE_FLAG NOTNULL) THEN A2.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (A9.DELETE_FLAG NOTNULL) THEN A9.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC))) UNION ALL (SELECT A2.LOCATION_ID, A2.WM_APPOINTMENT_ID, A9.WM_APPT_OBJ_TYPE, A9.WM_APPT_OBJ_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '10'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS ASN_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '40'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS PURCHASE_ORDERS_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '20'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS ORDER_ID, (CASE WHEN (A9.WM_APPT_OBJ_TYPE = '30'::NUMERIC(2,0)) THEN A9.WM_APPT_OBJ_ID ELSE NULL::"NUMERIC" END)::NUMERIC(9,0) AS SHIPMENT_ID, A2.WM_COMPANY_ID, A2.SCHEDULED_TSTMP, A10.WM_ILM_APPT_STATUS_DESC AS APPT_STATUS, A11.WM_APPT_TYPE_DESC AS APPT_TYPE, A3.WM_CARRIER_ID, A12.WM_DOCK_DOOR_DESC AS DOCK_DOOR, A3.EQUIP_INST_REF_CARRIER AS TRAILERNUMBER, A3.WM_EQUIPMENT_INSTANCE_ID AS TRAILERID, A5.WM_CARRIER_CD, A7.WM_LOCN_BRCD AS TRLR_LOCN, A4.WM_EQUIPMENT_DESC AS EQUIP_TYPE, A8.WM_TRAILER_TYPE_DESC AS TRLR_TYPE FROM (((((((((((ADMIN.WM_ILM_YARD_ACTIVITY A1 JOIN ADMIN.WM_ILM_APPOINTMENTS A2 ON (((A1.WM_APPOINTMENT_ID = A2.WM_APPOINTMENT_ID) AND (A1.LOCATION_ID = A2.LOCATION_ID)))) JOIN ADMIN.WM_EQUIPMENT_INSTANCE A3 ON ((((A1.WM_EQUIPMENT_ID_1 = A3.WM_EQUIPMENT_INSTANCE_ID) AND (A1.LOCATION_ID = A3.LOCATION_ID)) AND (A2.WM_COMPANY_ID = A3.WM_TC_COMPANY_ID)))) JOIN ADMIN.WM_EQUIPMENT A4 ON (((A3.WM_EQUIPMENT_ID = A4.WM_EQUIPMENT_ID) AND (A3.LOCATION_ID = A4.LOCATION_ID)))) LEFT JOIN ADMIN.WM_CARRIER_CODE A5 ON (((A3.WM_CARRIER_ID = A5.WM_CARRIER_ID) AND (A3.LOCATION_ID = A5.LOCATION_ID)))) LEFT JOIN ADMIN.WM_TRAILER_REF A6 ON (((A3.WM_EQUIPMENT_INSTANCE_ID = A6.WM_TRAILER_ID) AND (A3.LOCATION_ID = A6.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LOCN_HDR A7 ON (((A6.WM_CURRENT_LOCATION_ID = A7.WM_LOCN_ID) AND (A6.LOCATION_ID = A7.LOCATION_ID)))) LEFT JOIN ADMIN.WM_TRAILER_TYPE A8 ON (((A4.WM_TRAILER_TYPE_ID = A8.WM_TRAILER_TYPE_ID) AND (A4.LOCATION_ID = A8.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ILM_APPOINTMENT_OBJECTS A9 ON (((A2.WM_APPOINTMENT_ID = A9.WM_APPOINTMENT_ID) AND (A2.LOCATION_ID = A9.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ILM_APPOINTMENT_STATUS A10 ON (((A2.WM_APPT_STATUS = A10.WM_ILM_APPT_STATUS_CD) AND (A2.LOCATION_ID = A10.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ILM_APPOINTMENT_TYPE A11 ON (((A2.WM_APPT_TYPE = A11.WM_APPT_TYPE_ID) AND (A2.LOCATION_ID = A11.LOCATION_ID)))) LEFT JOIN ADMIN.WM_DOCK_DOOR A12 ON ((("NUMERIC"(A2.WM_DOCK_DOOR_ID, 655372) = A12.WM_DOCK_DOOR_ID) AND (A2.LOCATION_ID = A12.LOCATION_ID)))) WHERE (((A1.WM_ACTIVITY_TSTMP = (SELECT MAX(X.WM_ACTIVITY_TSTMP) AS MAX FROM ADMIN.WM_ILM_YARD_ACTIVITY X WHERE (((X.WM_APPOINTMENT_ID = A1.WM_APPOINTMENT_ID) AND (X.LOCATION_ID = A1.LOCATION_ID)) AND (X.WM_ACTIVITY_TYPE_ID = '50'::NUMERIC(2,0))))) AND (A1.WM_ACTIVITY_TYPE_ID = '50'::NUMERIC(2,0))) AND (CASE WHEN (A9.DELETE_FLAG NOTNULL) THEN A9.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)));

\echo
\echo *****  Creating view:  "WM_OB_OPS_IDENTITY_VW"

CREATE or replace VIEW  WM_OB_OPS_IDENTITY_VW
(
     LOCATION_ID,
     WM_ORDER_ID,
     WM_TC_ORDER_ID,
     WM_LINE_ITEM_ID,
     WM_BUSINESS_PARTNER_ID,
     WM_PARENT_ORDER_ID,
     WM_EXT_PURCHASE_ORDER,
     WM_O_FACILITY_ID,
     WM_O_FACILITY_ALIAS_ID,
     O_ADDR_1,
     O_CITY,
     O_POSTAL_CD,
     O_STATE_PROV,
     O_COUNTRY_CD,
     WM_D_FACILITY_ID,
     WM_D_FACILITY_ALIAS_ID,
     D_ADDR_1,
     D_CITY,
     D_STATE_PROV,
     D_POSTAL_CD,
     D_COUNTRY_CD,
     WM_PICKUP_START_TSTMP,
     WM_PICKUP_END_TSTMP,
     WM_DELIVERY_START_TSTMP,
     WM_DELIVERY_END_TSTMP,
     WM_ORDER_DATE_TSTMP,
     CANCELLED_FLAG,
     IMPORTED_FLAG,
     WM_ORDER_STATUS,
     WM_DO_STATUS,
     WM_EST_LPN,
     WM_ORDER_PRINT_TSTMP,
     TOTAL_NBR_OF_LPN,
     WM_ACTUAL_SHIPPED_TSTMP,
     WM_MAJOR_ORDER_GRP_ATTR,
     WM_D_FACILITY_NAME,
     DSG_SHIP_VIA,
     MAJOR_MINOR_ORDER,
     WM_MAJOR_ORDER_CTRL_NBR,
     MHE_FLAG,
     WM_ORDER_TYPE,
     WM_RTE_WAVE_NBR,
     NBR_OF_LABEL,
     WM_REF_SHIPMENT_NBR,
     WM_REF_STOP_SEQ,
     TOTAL_NBR_OF_UNITS,
     ROUTED_FLAG,
     WM_C_TMS_PLAN_ID,
     WM_PARENT_LINE_ITEM_ID,
     REF_FIELD_1,
     SHIPPED_QTY,
     ORDER_QTY,
     ORIG_ORDER_QTY,
     RECEIVED_QTY,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_TSTMP,
     EMERGENCY_FLAG,
     ALLOCATED_QTY,
     USER_CANCELED_QTY,
     WM_REASON_CD,
     UNITS_PAKD,
     WM_ITEM_ID,
     WM_TC_ORDER_LINE_ID,
     WM_REF_LINE_ITEM_ID,
     WM_REF_ORDER_ID,
     WM_WAVE_NBR,
     WM_SHIP_WAVE_NBR,
     WM_REPL_WAVE_NBR,
     CHASE_CREATED_LINE_FLAG,
     ADJUSTED_ORDER_QTY,
     LOCKED_FLAG,
     DO_STATUS_DESC,
     ORDER_STATUS_DESC,
     WM_SHIPMENT_ID,
     WM_TC_SHIPMENT_ID,
     WM_SHIPMENT_STATUS,
     UPDATE_SENT_FLAG,
     WM_CONS_RUN_ID,
     WM_CYCLE_EXECUTION_TSTMP,
     NUM_STOPS,
     NUM_DOCKS,
     WM_O_STOP_LOCATION_NAME,
     WM_D_STOP_LOCATION_NAME,
     WM_STATUS_CHANGE_TSTMP,
     SHIPMENT_CLOSED_FLAG,
     WM_SHIPMENT_START_TSTMP,
     WM_SHIPMENT_END_TSTMP,
     LEFT_WT,
     RIGHT_WT,
     WM_BILL_OF_LADING_NBR,
     WM_TRAILER_NBR,
     WM_SHIPMENT_STATUS_DESC,
     WM_SHIPMENT_STATUS_SHORT_DESC,
     WM_STOP_SEQ,
     ARRIVAL_START_TSTMP,
     ARRIVAL_END_TSTMP,
     DEPARTURE_START_TSTMP,
     DEPARTURE_END_TSTMP,
     STOP_STATUS,
     WM_SEAL_NBR,
     WM_AUTH_NBR,
     WM_DOCK_DOOR_LOCN_ID,
     WM_STOP_STATUS_DESC,
     WM_STOP_STATUS_SHORT_DESC,
     WM_SHIP_VIA_DESC,
     WM_SHIP_VIA,
     WM_PLAN_ID,
     WM_STO_NBR,
     WM_ROUTE_ID,
     WM_STOP_ID,
     COMMODITY,
     NUM_PALLETS,
     WEIGHT,
     VOLUME,
     DROP_DEAD_TSTMP,
     ETA_TSTMP,
     SPLIT_ROUTE,
     WM_TMS_CARRIER_ID,
     WM_TMS_CARRIER_NAME,
     WM_LOAD_STAT_CD,
     MILES,
     DRIVE_TIME,
     WM_EQUIP_TYPE,
     WM_DEL_TYPE,
     WM_TMS_PLAN_TSTMP,
     PLT_WEIGHT,
     WM_STAT_CD
) AS
SELECT A1.LOCATION_ID, A1.WM_ORDER_ID, A1.WM_TC_ORDER_ID, A2.WM_LINE_ITEM_ID, A1.WM_BUSINESS_PARTNER_ID, A1.WM_PARENT_ORDER_ID, A1.WM_EXT_PURCHASE_ORDER, A1.WM_O_FACILITY_ID, A1.WM_O_FACILITY_ALIAS_ID, A1.O_ADDR_1, A1.O_CITY, A1.O_POSTAL_CD, A1.O_STATE_PROV, A1.O_COUNTRY_CD, A1.WM_D_FACILITY_ID, A1.WM_D_FACILITY_ALIAS_ID, A1.D_ADDR_1, A1.D_CITY, A1.D_STATE_PROV, A1.D_POSTAL_CD, A1.D_COUNTRY_CD, A1.WM_PICKUP_START_TSTMP, A1.WM_PICKUP_END_TSTMP, A1.WM_DELIVERY_START_TSTMP, A1.WM_DELIVERY_END_TSTMP, A1.WM_ORDER_DATE_TSTMP, A1.CANCELLED_FLAG, A1.IMPORTED_FLAG, A1.WM_ORDER_STATUS, A1.WM_DO_STATUS, A1.WM_EST_LPN, A1.WM_ORDER_PRINT_TSTMP, A1.TOTAL_NBR_OF_LPN, A1.WM_ACTUAL_SHIPPED_TSTMP, A1.WM_MAJOR_ORDER_GRP_ATTR, A1.WM_D_FACILITY_NAME, A1.DSG_SHIP_VIA, A1.MAJOR_MINOR_ORDER, A1.WM_MAJOR_ORDER_CTRL_NBR, A1.MHE_FLAG, A1.WM_ORDER_TYPE, A1.WM_RTE_WAVE_NBR, A1.NBR_OF_LABEL, A1.WM_REF_SHIPMENT_NBR, A1.WM_REF_STOP_SEQ, A1.TOTAL_NBR_OF_UNITS, A1.ROUTED_FLAG, A1.WM_C_TMS_PLAN_ID, A2.WM_PARENT_LINE_ITEM_ID, A2.REF_FIELD_1, A2.SHIPPED_QTY, A2.ORDER_QTY, A2.ORIG_ORDER_QTY, A2.RECEIVED_QTY, A2.WM_CREATED_TSTMP, A2.WM_LAST_UPDATED_TSTMP, A2.EMERGENCY_FLAG, A2.ALLOCATED_QTY, A2.USER_CANCELED_QTY, A2.WM_REASON_CD, A2.UNITS_PAKD, A2.WM_ITEM_ID, A2.WM_TC_ORDER_LINE_ID, A2.WM_REF_LINE_ITEM_ID, A2.WM_REF_ORDER_ID, A2.WM_WAVE_NBR, A2.WM_SHIP_WAVE_NBR, A2.WM_REPL_WAVE_NBR, A2.CHASE_CREATED_LINE_FLAG, A2.ADJUSTED_ORDER_QTY, A2.LOCKED_FLAG, A3.WM_ORDER_STATUS_DESC AS DO_STATUS_DESC, A4.WM_ORDER_STATUS_DESC AS ORDER_STATUS_DESC, A5.WM_SHIPMENT_ID, A5.WM_TC_SHIPMENT_ID, A5.WM_SHIPMENT_STATUS, A5.UPDATE_SENT_FLAG, A5.WM_CONS_RUN_ID, A5.WM_CYCLE_EXECUTION_TSTMP, A5.NUM_STOPS, A5.NUM_DOCKS, A5.WM_O_STOP_LOCATION_NAME, A5.WM_D_STOP_LOCATION_NAME, A5.WM_STATUS_CHANGE_TSTMP, A5.SHIPMENT_CLOSED_FLAG, A5.WM_SHIPMENT_START_TSTMP, A5.WM_SHIPMENT_END_TSTMP, A5.LEFT_WT, A5.RIGHT_WT, A5.WM_BILL_OF_LADING_NBR, A5.WM_TRAILER_NBR, A6.WM_SHIPMENT_STATUS_DESC, A6.WM_SHIPMENT_STATUS_SHORT_DESC, A7.WM_STOP_SEQ, A7.ARRIVAL_START_TSTMP, A7.ARRIVAL_END_TSTMP, A7.DEPARTURE_START_TSTMP, A7.DEPARTURE_END_TSTMP, A7.STOP_STATUS, A7.WM_SEAL_NBR, A7.WM_AUTH_NBR, A7.WM_DOCK_DOOR_LOCN_ID, A8.WM_STOP_STATUS_DESC, A8.WM_STOP_STATUS_SHORT_DESC, A9.WM_SHIP_VIA_DESC, A9.WM_SHIP_VIA, A10.WM_PLAN_ID, A10.WM_STO_NBR, A10.WM_ROUTE_ID, A10.WM_STOP_ID, A10.COMMODITY, A10.NUM_PALLETS, A10.WEIGHT, A10.VOLUME, A10.DROP_DEAD_TSTMP, A10.ETA_TSTMP, A10.SPLIT_ROUTE, A10.WM_TMS_CARRIER_ID, A10.WM_TMS_CARRIER_NAME, A10.WM_LOAD_STAT_CD, A10.MILES, A10.DRIVE_TIME, A10.WM_EQUIP_TYPE, A10.WM_DEL_TYPE, A10.WM_TMS_PLAN_TSTMP, A10.PLT_WEIGHT, A10.WM_STAT_CD FROM (((((((((ADMIN.WM_ORDERS A1 LEFT JOIN ADMIN.WM_ORDER_LINE_ITEM A2 ON (((A1.WM_ORDER_ID = A2.WM_ORDER_ID) AND (A1.LOCATION_ID = A2.LOCATION_ID)))) LEFT JOIN ADMIN.WM_DO_STATUS A3 ON (((A1.WM_DO_STATUS = A3.WM_ORDER_STATUS_ID) AND (A1.LOCATION_ID = A3.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ORDER_STATUS A4 ON (((A1.WM_ORDER_STATUS = A4.WM_ORDER_STATUS_ID) AND (A1.LOCATION_ID = A4.LOCATION_ID)))) LEFT JOIN ADMIN.WM_SHIPMENT A5 ON (((A1.WM_REF_SHIPMENT_NBR = A5.WM_TC_SHIPMENT_ID) AND (A1.LOCATION_ID = A5.LOCATION_ID)))) LEFT JOIN ADMIN.WM_SHIPMENT_STATUS A6 ON (((A5.WM_SHIPMENT_STATUS = A6.WM_SHIPMENT_STATUS) AND (A5.LOCATION_ID = A6.LOCATION_ID)))) LEFT JOIN ADMIN.WM_STOP A7 ON (((((A5.WM_SHIPMENT_ID = A7.WM_SHIPMENT_ID) AND (A1.WM_D_FACILITY_ID = A7.WM_FACILITY_ID)) AND (A1.LOCATION_ID = A7.LOCATION_ID)) AND (A5.LOCATION_ID = A7.LOCATION_ID)))) LEFT JOIN ADMIN.WM_STOP_STATUS A8 ON (((A7.STOP_STATUS = A8.WM_STOP_STATUS) AND (A7.LOCATION_ID = A8.LOCATION_ID)))) LEFT JOIN ADMIN.WM_SHIP_VIA A9 ON (((A5.WM_ASSIGNED_SHIP_VIA = A9.WM_SHIP_VIA) AND (A5.LOCATION_ID = A9.LOCATION_ID)))) LEFT JOIN ADMIN.WM_C_TMS_PLAN A10 ON (((A1.WM_C_TMS_PLAN_ID = A10.WM_C_TMS_PLAN_ID) AND (A1.LOCATION_ID = A10.LOCATION_ID))));

\echo
\echo *****  Creating view:  "WM_IB_OPS_IDENTITY_VW"

CREATE or replace VIEW  WM_IB_OPS_IDENTITY_VW
(
     LOCATION_ID,
     WM_PURCHASE_ORDERS_ID,
     WM_PURCHASE_ORDERS_LINE_ITEM_ID,
     WM_ASN_ID,
     WM_ASN_DETAIL_ID,
     WM_BUSINESS_PARTNER_ID,
     WM_SKU_ID,
     WM_SKU_GTIN,
     WM_DELIVERY_START_TSTMP,
     WM_DELIVERY_END_TSTMP,
     WM_PROMISED_DLVR_TSTMP,
     WM_SHIP_BY_DT,
     CANCELLED_FLAG,
     SHIPPED_QTY,
     RECEIVED_QTY,
     ORDER_QTY,
     ORIG_ORDER_QTY,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_TSTMP,
     INBD_LPNS_RCVD,
     WM_TC_PURCHASE_ORDERS_ID,
     EXPIRE_TSTMP,
     SHIPPED_LPN_CNT,
     RECEIVED_LPN_CNT,
     UNITS_ASSIGNED_TO_LPN,
     QUALITY_CHECK_HOLD_UPON_RCPT_FLAG,
     WM_SEQ_NBR,
     WM_PURCHASE_ORDERS_STATUS,
     WM_O_FACILITY_ID,
     WM_O_FACILITY_ALIAS_ID,
     WM_D_FACILITY_ID,
     WM_D_FACILITY_ALIAS_ID,
     WM_DUE_DT,
     WM_CANCEL_DT,
     WM_PURCHASE_ORDERS_DT_TSTMP,
     WM_FIRST_RCPT_TSTMP,
     WM_LAST_RCPT_TSTMP,
     REP_NAME,
     WM_BUSINESSS_PARTNER_DESC,
     WM_BP_ID,
     ADDR_1,
     CITY,
     STATE_PROV,
     POSTAL_CD,
     COUNTRY_CD,
     WM_TC_ASN_ID,
     WM_ASN_STATUS,
     WM_ACTUAL_ARRIVAL_TSTMP,
     WM_RECEIPT_TSTMP,
     WM_APPOINTMENT_ID,
     APPOINTMENT_DURATION,
     TOTAL_SHIPPED_QTY,
     TOTAL_RECEIVED_QTY,
     WM_ASSIGNED_CARRIER_CD,
     WM_BUYER_CD,
     WM_ACTUAL_SHIPPED_TSTMP,
     WM_LAST_RECEIPT_TSTMP,
     WM_VERIFIED_TSTMP,
     WM_SHIPMENT_ID,
     WM_TC_SHIPMENT_ID,
     WM_FIRST_RECEIPT_TSTMP,
     WM_TRAILER_NBR,
     WM_PURCHASE_ORDERS_STATUS_DESC,
     WM_PURCHASE_ORDERS_STATUS_NOTE,
     WM_ASN_STATUS_DESC
) AS
SELECT A12.LOCATION_ID, A12.WM_PURCHASE_ORDERS_ID, A12.WM_PURCHASE_ORDERS_LINE_ITEM_ID, A13.WM_ASN_ID, A13.WM_ASN_DETAIL_ID, A12.WM_BUSINESS_PARTNER_ID, A12.WM_SKU_ID, A12.WM_SKU_GTIN, A12.WM_DELIVERY_START_TSTMP, A12.WM_DELIVERY_END_TSTMP, A12.WM_PROMISED_DLVR_TSTMP, A12.WM_SHIP_BY_DT, A12.CANCELLED_FLAG, A12.SHIPPED_QTY, A12.RECEIVED_QTY, A12.ORDER_QTY, A12.ORIG_ORDER_QTY, A12.WM_CREATED_TSTMP, A12.WM_LAST_UPDATED_TSTMP, A12.INBD_LPNS_RCVD, A13.WM_TC_PURCHASE_ORDERS_ID, A13.EXPIRE_TSTMP, A13.SHIPPED_LPN_CNT, A13.RECEIVED_LPN_CNT, A13.UNITS_ASSIGNED_TO_LPN, A13.QUALITY_CHECK_HOLD_UPON_RCPT_FLAG, A13.WM_SEQ_NBR, A11.WM_PURCHASE_ORDERS_STATUS, A11.WM_O_FACILITY_ID, A11.WM_O_FACILITY_ALIAS_ID, A11.WM_D_FACILITY_ID, A11.WM_D_FACILITY_ALIAS_ID, A11.WM_DUE_DT, A11.WM_CANCEL_DT, A11.WM_PURCHASE_ORDERS_DT_TSTMP, A11.WM_FIRST_RCPT_TSTMP, A11.WM_LAST_RCPT_TSTMP, A11.REP_NAME, A14.WM_BUSINESSS_PARTNER_DESC, A14.WM_BP_ID, A14.ADDR_1, A14.CITY, A14.STATE_PROV, A14.POSTAL_CD, A14.COUNTRY_CD, A15.WM_TC_ASN_ID, A15.WM_ASN_STATUS, A15.WM_ACTUAL_ARRIVAL_TSTMP, A15.WM_RECEIPT_TSTMP, A15.WM_APPOINTMENT_ID, A15.APPOINTMENT_DURATION, A15.TOTAL_SHIPPED_QTY, A15.TOTAL_RECEIVED_QTY, A15.WM_ASSIGNED_CARRIER_CD, A15.WM_BUYER_CD, A15.WM_ACTUAL_SHIPPED_TSTMP, A15.WM_LAST_RECEIPT_TSTMP, A15.WM_VERIFIED_TSTMP, A15.WM_SHIPMENT_ID, A15.WM_TC_SHIPMENT_ID, A15.WM_FIRST_RECEIPT_TSTMP, A15.WM_TRAILER_NBR, A16.WM_PURCHASE_ORDERS_STATUS_DESC, A16.WM_PURCHASE_ORDERS_STATUS_NOTE, A17.WM_ASN_STATUS_DESC FROM ((((((ADMIN.WM_PURCHASE_ORDERS A11 LEFT JOIN ADMIN.WM_PURCHASE_ORDERS_LINE_ITEM A12 ON (((A11.WM_PURCHASE_ORDERS_ID = A12.WM_PURCHASE_ORDERS_ID) AND (A11.LOCATION_ID = A12.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ASN_DETAIL A13 ON ((((A12.WM_PURCHASE_ORDERS_ID = A13.WM_PURCHASE_ORDERS_ID) AND (A12.WM_PURCHASE_ORDERS_LINE_ITEM_ID = A13.WM_PURCHASE_ORDERS_LINE_ITEM_ID)) AND (A12.LOCATION_ID = A13.LOCATION_ID)))) LEFT JOIN ADMIN.WM_BUSINESS_PARTNER A14 ON (((A11.WM_BUSINESS_PARTNER_ID = A14.WM_BUSINESS_PARTNER_ID) AND (A11.LOCATION_ID = A14.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ASN A15 ON (((A13.WM_ASN_ID = A15.WM_ASN_ID) AND (A13.LOCATION_ID = A15.LOCATION_ID)))) LEFT JOIN ADMIN.WM_PURCHASE_ORDERS_STATUS A16 ON ((((A11.WM_PURCHASE_ORDERS_STATUS = A16.WM_PURCHASE_ORDERS_STATUS) AND (A11.LOCATION_ID = A16.LOCATION_ID)) AND (UPPER(A16.WM_PURCHASE_ORDERS_STATUS_NOTE) = 'ORDER MANAGEMENT'::"VARCHAR")))) LEFT JOIN ADMIN.WM_ASN_STATUS A17 ON (((A15.WM_ASN_STATUS = A17.WM_ASN_STATUS) AND (A15.LOCATION_ID = A17.LOCATION_ID))));

\echo
\echo *****  Creating view:  "WM_SLOTTING_IDENTITY_VW"

CREATE or replace VIEW  WM_SLOTTING_IDENTITY_VW
(
     LOCATION_ID,
     WM_PICK_LOCN_HDR_ID,
     WM_PICK_LOCN_DTL_ID,
     WM_LOCN_ID,
     MAX_INVN_QTY,
     MIN_INVN_QTY,
     ACTL_INVN_CASES,
     MIN_INVN_CASES,
     MAX_INVN_CASES,
     TRIG_REPL_FOR_SKU_FLAG,
     WM_CREATE_TSTMP,
     WM_MOD_TSTMP,
     WM_USER_ID,
     WM_LTST_PICK_ASSIGN_TSTMP,
     WM_PIKNG_LOCK_CD,
     TO_BE_FILLD_CASES,
     MIN_QTY_TO_RLS_HELD_RPLN,
     MIN_CASES_TO_RLS_HELD_RPLN,
     PACK_QTY,
     WM_ITEM_ID,
     WM_REPL_LOCN_BRCD,
     WM_PUTWY_TYPE,
     WM_REPL_FLAG,
     WM_REPL_CHECK_DIGIT,
     MAX_VOL,
     MAX_WT,
     REPL_X_COORD,
     REPL_Y_COORD,
     REPL_Z_COORD,
     WM_REPL_TRAVEL_AISLE,
     WM_REPL_TRAVEL_ZONE,
     PICK_TO_LIGHT_FLAG,
     WM_LOCN_PUTAWAY_LOCK,
     WM_INVN_LOCK_CD,
     LEFT_SLOT,
     RIGHT_SLOT,
     MY_RANGE,
     WM_RACK_LEVEL_ID,
     WM_RACK_TYPE,
     WM_SLOTTING_GROUP,
     WM_RACK_TYPE_NAME,
     WM_RACK_TYPE_DESC,
     LEVEL_NBR,
     NBR_OF_SLOTS
) AS
SELECT A1.LOCATION_ID, A1.WM_PICK_LOCN_HDR_ID, A2.WM_PICK_LOCN_DTL_ID, A2.WM_LOCN_ID, A2.MAX_INVN_QTY, A2.MIN_INVN_QTY, A2.ACTL_INVN_CASES, A2.MIN_INVN_CASES, A2.MAX_INVN_CASES, A2.TRIG_REPL_FOR_SKU_FLAG, A2.WM_CREATE_TSTMP, A2.WM_MOD_TSTMP, A2.WM_USER_ID, A2.WM_LTST_PICK_ASSIGN_TSTMP, A2.WM_PIKNG_LOCK_CD, A2.TO_BE_FILLD_CASES, A2.MIN_QTY_TO_RLS_HELD_RPLN, A2.MIN_CASES_TO_RLS_HELD_RPLN, A2.PACK_QTY, A2.WM_ITEM_ID, A1.WM_REPL_LOCN_BRCD, A1.WM_PUTWY_TYPE, A1.WM_REPL_FLAG, A1.WM_REPL_CHECK_DIGIT, A1.MAX_VOL, A1.MAX_WT, A1.REPL_X_COORD, A1.REPL_Y_COORD, A1.REPL_Z_COORD, A1.WM_REPL_TRAVEL_AISLE, A1.WM_REPL_TRAVEL_ZONE, A1.PICK_TO_LIGHT_FLAG, A1.WM_LOCN_PUTAWAY_LOCK, A1.WM_INVN_LOCK_CD, A3.LEFT_SLOT, A3.RIGHT_SLOT, A3.MY_RANGE, A3.WM_RACK_LEVEL_ID, A3.WM_RACK_TYPE, A3.WM_SLOTTING_GROUP, A4.WM_RACK_TYPE_NAME, A4.WM_RACK_TYPE_DESC, A5.LEVEL_NBR, A5.NBR_OF_SLOTS FROM ((((ADMIN.WM_PICK_LOCN_HDR A1 LEFT JOIN ADMIN.WM_PICK_LOCN_DTL A2 ON (((A1.WM_LOCN_ID = A2.WM_LOCN_ID) AND (A1.LOCATION_ID = A2.LOCATION_ID)))) LEFT JOIN ADMIN.WM_PICK_LOCN_HDR_SLOTTING A3 ON (((A1.WM_PICK_LOCN_HDR_ID = A3.WM_PICK_LOCN_HDR_ID) AND (A1.LOCATION_ID = A3.LOCATION_ID)))) LEFT JOIN ADMIN.WM_RACK_TYPE A4 ON (((A3.WM_RACK_TYPE = A4.WM_RACK_TYPE_ID) AND (A3.LOCATION_ID = A4.LOCATION_ID)))) LEFT JOIN ADMIN.WM_RACK_TYPE_LEVEL A5 ON (((A3.WM_RACK_LEVEL_ID = A5.WM_RACK_LEVEL_ID) AND (A3.LOCATION_ID = A5.LOCATION_ID)))) WHERE ((((CASE WHEN (A1.DELETE_FLAG NOTNULL) THEN A1.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC) AND (CASE WHEN (A2.DELETE_FLAG NOTNULL) THEN A2.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (A4.DELETE_FLAG NOTNULL) THEN A4.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (A5.DELETE_FLAG NOTNULL) THEN A5.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC));

\echo
\echo *****  Creating view:  "WM_LM_MSG_IDENTITY_VW"

CREATE or replace VIEW  WM_LM_MSG_IDENTITY_VW
(
     LOCATION_ID,
     WM_TRAN_NBR,
     WM_TRAN_SEQ_NBR,
     CRIT_SEQ_NBR,
     WM_LABOR_MSG_DTL_ID,
     WM_LABOR_MSG_STATUS,
     WM_WHSE,
     WM_ACCOUNT_NAME,
     WM_LOGIN_USER_ID,
     WM_SCHED_START_TIME,
     WM_SCHED_START_TSTMP,
     WM_VEHICLE_TYPE,
     WM_REF_CD,
     WM_REF_NBR,
     WM_SHIFT,
     RESEND_TRAN_FLAG,
     REQ_SAM_REPLY_FLAG,
     MISC,
     WM_CREATED_TSTMP,
     WM_ACTUAL_END_TIME,
     WM_ACTUAL_END_TSTMP,
     WM_WAVE_NBR,
     WM_TRANS_TYPE,
     WM_JOB_FUNCTION,
     WM_CARTON_NBR,
     WM_TASK_NBR,
     WM_CASE_NBR,
     WM_MSG_STAT_CD,
     TOTAL_QTY,
     WM_LOCN_GRP_ATTR,
     QTY_PER_GRAB,
     WM_LOCN_CLASS,
     QTY,
     WM_TC_ILPN_ID,
     WM_TC_OLPN_ID,
     WM_PALLET_ID,
     WM_LOCN_SLOT_TYPE,
     LOCN_X_COORD,
     LOCN_Y_COORD,
     LOCN_Z_COORD,
     LOCN_TRAV_AISLE,
     LOCN_TRAV_ZONE,
     BOX_QTY,
     INNERPACK_QTY,
     PACK_QTY,
     CASE_QTY,
     TIER_QTY,
     PALLET_QTY,
     DSP_LOCN,
     WM_ITEM_BAR_CD,
     LOADED_FLAG,
     WM_PUTAWAY_ZONE,
     WM_PICK_DETERMINATION_ZONE,
     WM_WORK_AREA,
     WM_WORK_GROUP,
     WM_PULL_ZONE,
     WM_ASSIGNMENT_ZONE,
     WM_CRIT_TYPE,
     WM_CRIT_VALUE
) AS
SELECT LM.LOCATION_ID, LM.WM_TRAN_NBR, LD.WM_TRAN_SEQ_NBR, LDC.CRIT_SEQ_NBR, LD.WM_LABOR_MSG_DTL_ID, LM.WM_LABOR_MSG_STATUS, LM.WM_WHSE, LM.WM_ACCOUNT_NAME, LM.WM_LOGIN_USER_ID, LM.WM_SCHED_START_TIME, LM.WM_SCHED_START_TSTMP, LM.WM_VEHICLE_TYPE, LM.WM_REF_CD, LM.WM_REF_NBR, LM.WM_SHIFT, LM.RESEND_TRAN_FLAG, LM.REQ_SAM_REPLY_FLAG, LM.MISC, LM.WM_CREATED_TSTMP, LM.WM_ACTUAL_END_TIME, LM.WM_ACTUAL_END_TSTMP, LM.WM_WAVE_NBR, LM.WM_TRANS_TYPE, LM.WM_JOB_FUNCTION, LM.WM_CARTON_NBR, LM.WM_TASK_NBR, LM.WM_CASE_NBR, LM.WM_MSG_STAT_CD, LM.TOTAL_QTY, LM.WM_LOCN_GRP_ATTR, LD.QTY_PER_GRAB, LD.WM_LOCN_CLASS, LD.QTY, LD.WM_TC_ILPN_ID, LD.WM_TC_OLPN_ID, LD.WM_PALLET_ID, LD.WM_LOCN_SLOT_TYPE, LD.LOCN_X_COORD, LD.LOCN_Y_COORD, LD.LOCN_Z_COORD, LD.LOCN_TRAV_AISLE, LD.LOCN_TRAV_ZONE, LD.BOX_QTY, LD.INNERPACK_QTY, LD.PACK_QTY, LD.CASE_QTY, LD.TIER_QTY, LD.PALLET_QTY, LD.DSP_LOCN, LD.WM_ITEM_BAR_CD, LD.LOADED_FLAG, LD.WM_PUTAWAY_ZONE, LD.WM_PICK_DETERMINATION_ZONE, LD.WM_WORK_AREA, LD.WM_WORK_GROUP, LD.WM_PULL_ZONE, LD.WM_ASSIGNMENT_ZONE, LDC.WM_CRIT_TYPE, LDC.WM_CRIT_VALUE FROM ((ADMIN.WM_LABOR_MSG LM LEFT JOIN ADMIN.WM_LABOR_MSG_DTL LD ON (((LM.LOCATION_ID = LD.LOCATION_ID) AND (LM.WM_LABOR_MSG_ID = LD.WM_LABOR_MSG_ID)))) LEFT JOIN ADMIN.WM_LABOR_MSG_DTL_CRIT LDC ON (((LD.LOCATION_ID = LDC.LOCATION_ID) AND (LD.WM_LABOR_MSG_DTL_ID = LDC.WM_LABOR_MSG_DTL_ID)))) WHERE (LM.WM_LABOR_MSG_ID = ANY (SELECT MAX(WM_LABOR_MSG.WM_LABOR_MSG_ID) AS MAX FROM ADMIN.WM_LABOR_MSG GROUP BY WM_LABOR_MSG.WM_TRAN_NBR));

\echo
\echo *****  Creating view:  "WM_TASK_IDENTITY_VW"

CREATE or replace VIEW  WM_TASK_IDENTITY_VW
(
     LOCATION_ID,
     WM_TASK_ID,
     WM_TASK_HDR_ID,
     WM_TASK_DTL_ID,
     WM_WHSE,
     WM_INVN_NEED_TYPE,
     TASK_PRTY,
     WM_TASK_TYPE,
     WM_TASK_GENRTN_REF_NBR,
     HDR_STAT_CD,
     DTL_STAT_CD,
     WM_CREATE_TSTMP,
     WM_MOD_TSTMP,
     WM_USER_ID,
     WM_RLS_TSTMP,
     WM_TASK_CMPL_REF_NBR,
     WM_OWNER_USER_ID,
     WM_EXCEPTION_CD,
     WM_CURR_LOCN_ID,
     WM_VOCOLLECT_ASSIGN_ID,
     WM_MHE_FLAG,
     WM_VOCO_INTRNL_REVERSE_ID,
     HDR_ITEM_ID,
     REPRINT_CNT,
     WM_TASK_SEQ_NBR,
     WM_CNTR_NBR,
     WM_PULL_LOCN_ID,
     ALLOC_UOM,
     ORIG_REQMT,
     QTY_ALLOC,
     QTY_PULLD,
     WM_DEST_LOCN_ID,
     WM_PICK_SEQ_CD,
     WM_CARTON_NBR,
     WM_CARTON_SEQ_NBR,
     SUBSTITUTION_FLAG,
     VOCOLLECT_POSN,
     VOCOLLECT_SHORT_FLAG,
     DTL_ITEM_ID,
     WM_TC_ORDER_ID,
     WM_LINE_ITEM_ID,
     CHASE_CREATED_FLAG
) AS
SELECT TH.LOCATION_ID, TH.WM_TASK_ID, TH.WM_TASK_HDR_ID, TD.WM_TASK_DTL_ID, TH.WM_WHSE, TD.WM_INVN_NEED_TYPE, TD.TASK_PRTY, TD.WM_TASK_TYPE, TD.WM_TASK_GENRTN_REF_NBR, TH.WM_STAT_CD AS HDR_STAT_CD, TD.WM_STAT_CD AS DTL_STAT_CD, TD.WM_CREATE_TSTMP, TD.WM_MOD_TSTMP, TD.WM_USER_ID, TH.WM_RLS_TSTMP, TD.WM_TASK_CMPL_REF_NBR, TH.WM_OWNER_USER_ID, TH.WM_EXCEPTION_CD, TH.WM_CURR_LOCN_ID, TH.WM_VOCOLLECT_ASSIGN_ID, TH.WM_MHE_FLAG, TH.WM_VOCO_INTRNL_REVERSE_ID, TH.WM_ITEM_ID AS HDR_ITEM_ID, TH.REPRINT_CNT, TD.WM_TASK_SEQ_NBR, TD.WM_CNTR_NBR, TD.WM_PULL_LOCN_ID, TD.ALLOC_UOM, TD.ORIG_REQMT, TD.QTY_ALLOC, TD.QTY_PULLD, TD.WM_DEST_LOCN_ID, TD.WM_PICK_SEQ_CD, TD.WM_CARTON_NBR, TD.WM_CARTON_SEQ_NBR, TD.SUBSTITUTION_FLAG, TD.VOCOLLECT_POSN, TD.VOCOLLECT_SHORT_FLAG, TD.WM_ITEM_ID AS DTL_ITEM_ID, TD.WM_TC_ORDER_ID, TD.WM_LINE_ITEM_ID, TD.CHASE_CREATED_FLAG FROM (ADMIN.WM_TASK_HDR TH LEFT JOIN ADMIN.WM_TASK_DTL TD ON (((TH.LOCATION_ID = TD.LOCATION_ID) AND (TH.WM_TASK_ID = TD.WM_TASK_ID))));

\echo
\echo *****  Creating view:  "WM_ITEM_LOCATION_HIST_VW"

CREATE or replace VIEW  WM_ITEM_LOCATION_HIST_VW
(
     LOCATION_ID,
     WM_LOCN_ID,
     WM_ITEM_ID,
     WM_CREATED_TSTMP,
     ACTL_INVN_CASES,
     MAX_INVN_CASES,
     MAX_INVN_QTY,
     MIN_CASES_TO_RLS_HELD_RPLN,
     MIN_INVN_CASES,
     MIN_INVN_QTY,
     MIN_QTY_TO_RLS_HELD_RPLN,
     PACK_QTY,
     WM_PIKNG_LOCK_CD,
     TO_BE_FILLD_CASES,
     TRIG_REPL_FOR_SKU_FLAG
) AS
SELECT PLD.LOCATION_ID, PLD.WM_LOCN_ID, PLD.WM_ITEM_ID, CASE WHEN (PLD.WM_CREATE_TSTMP NOTNULL) THEN PLD.WM_CREATE_TSTMP WHEN (PLD.WM_CREATED_TSTMP NOTNULL) THEN PLD.WM_CREATED_TSTMP ELSE NULL::"TIMESTAMP" END AS WM_CREATED_TSTMP, PLD.ACTL_INVN_CASES, PLD.MAX_INVN_CASES, PLD.MAX_INVN_QTY, PLD.MIN_CASES_TO_RLS_HELD_RPLN, PLD.MIN_INVN_CASES, PLD.MIN_INVN_QTY, PLD.MIN_QTY_TO_RLS_HELD_RPLN, PLD.PACK_QTY, PLD.WM_PIKNG_LOCK_CD, PLD.TO_BE_FILLD_CASES, PLD.TRIG_REPL_FOR_SKU_FLAG FROM ADMIN.WM_PICK_LOCN_DTL PLD;

\echo
\echo *****  Creating view:  "WM_ITEM_MASTER_VW"

CREATE or replace VIEW  WM_ITEM_MASTER_VW
(
     LOCATION_ID,
     WM_ITEM_ID,
     ITEM_SEASON,
     ITEM_SEASON_YEAR,
     ITEM_STYLE,
     ITEM_STYLE_SFX,
     ITEM_COLOR,
     ITEM_COLOR_SFX,
     ITEM_SECOND_DIM,
     ITEM_QUALITY,
     ITEM_SIZE_DESC,
     ITEM_BAR_CD,
     WM_ITEM_DESC,
     WM_ITEM_NAME,
     COLOR_DESC,
     WM_STAB_CD,
     ITEM_ORIENTATION,
     PROTN_FACTOR,
     CAVITY_LEN,
     CAVITY_WD,
     CAVITY_HT,
     INCREMENTAL_LEN,
     INCREMENTAL_WD,
     INCREMENTAL_HT,
     STACKABLE_ITEM,
     MAX_NEST_NUMBER,
     UNIT_HT,
     UNIT_LEN,
     UNIT_WIDTH,
     UNIT_WT,
     UNIT_VOL,
     COMMODITY_LEVEL_DESC,
     WM_ITEM_IMAGE_FILE_NAME,
     STAT_CODE,
     CATCH_WT,
     CD_MASTER_ID,
     ITEM_MASTER_ID,
     CREATE_DATE_TIME,
     MOD_DATE_TIME,
     WM_VERSION_ID,
     FTZ_HDR_ID,
     UPC_PRE_DIGIT,
     UPC_VENDOR_CODE,
     UPC_SRL_PROD_NBR,
     UPC_POST_DIGIT,
     SKU_ID,
     NMFC_CODE,
     SIZE_RANGE_CODE,
     SIZE_REL_POSN_IN_TABLE,
     VOLTY_CODE,
     PKG_TYPE,
     PROD_SUB_GRP,
     WM_PROD_TYPE,
     PROD_LINE,
     SALE_GRP,
     COORD_1,
     COORD_2,
     WM_CARTON_TYPE,
     WM_UNIT_PRICE,
     WM_RETAIL_PRICE,
     WM_OPER_CD,
     MAX_CASE_QTY,
     CUBE_MULT_QTY,
     NEST_VOL,
     NEST_CNT,
     UNITS_PER_PICK_ACTIVE,
     HNDL_ATTR_ACTIVE,
     UNITS_PER_PICK_CASE_PICK,
     HNDL_ATTR_CASE_PICK,
     UNITS_PER_PICK_RESV,
     HNDL_ATTR_RESV,
     PROD_LIFE_IN_DAY,
     MAX_RECV_TO_XPIRE_DAYS,
     AVG_DLY_DMND,
     WT_TOL_PCNT,
     CONS_PRTY_DATE_CODE,
     CONS_PRTY_DATE_WINDOW,
     CONS_PRTY_DATE_WINDOW_INCR,
     ACTIVATION_DT,
     ALLOW_RCPT_OLDER_ITEM_FLAG,
     CRITCL_DIM_1,
     CRITCL_DIM_2,
     CRITCL_DIM_3,
     MFG_DATE_REQD_FLAG,
     XPIRE_DATE_REQD_FLAG,
     SHIP_BY_DATE_REQD_FLAG,
     ITEM_ATTR_REQD_FLAG,
     BATCH_REQD_FLAG,
     PROD_STAT_REQD_FLAG,
     COUNTRY_OF_ORIGIN_REQD_FLAG,
     WM_VENDOR_ITEM_NBR,
     WM_PICK_WT_TOL_TYPE,
     PICK_WT_TOL_AMT,
     WM_MHE_WT_TOL_TYPE,
     MHE_WT_TOL_AMT,
     LOAD_ATTR,
     TEMP_ZONE,
     TRLR_TEMP_ZONE,
     WM_PKT_CONSOL_ATTR,
     WM_BUYER_DISP_CD,
     WM_CRUSH_CD,
     CONVEY_FLAG,
     WM_STORE_DEPT,
     WM_MERCH_TYPE,
     WM_MERCH_GROUP,
     SPL_INSTR_CD_1,
     SPL_INSTR_CD_2,
     SPL_INSTR_CD_3,
     SPL_INSTR_CD_4,
     SPL_INSTR_CD_5,
     SPL_INSTR_CD_6,
     SPL_INSTR_CD_7,
     SPL_INSTR_CD_8,
     SPL_INSTR_CD_9,
     SPL_INSTR_CD_10,
     SPL_INSTR_1,
     SPL_INSTR_2,
     PROMPT_FOR_VENDOR_ITEM_NBR_FLAG,
     PROMPT_PACK_QTY_FLAG,
     ECCN_NBR,
     EXP_LICN_NBR,
     EXP_LICN_XP_DT,
     EXP_LICN_SYMBOL,
     WM_ORGN_CERT_CD,
     ITAR_EXEMPT_NBR,
     FRT_CLASS,
     WM_DFLT_BATCH_STAT,
     DFLT_INCUB_LOCK,
     BASE_INCUB_FLAG,
     INCUB_DAYS,
     INCUB_HOURS,
     SRL_NBR_REQD_FLAG,
     MINOR_SRL_NBR_REQ_FLAG,
     DUP_SRL_NBR_FLAG,
     MAX_RCPT_QTY,
     FTZ_FLAG,
     HTS_NBR,
     CC_UNIT_TOLER_VALUE,
     CC_WGT_TOLER_VALUE,
     CC_DLR_TOLER_VALUE,
     CC_PCNT_TOLER_VALUE,
     VOCOLLECT_BASE_WT,
     VOCOLLECT_BASE_QTY,
     VOCOLLECT_BASE_ITEM,
     PICK_WT_TOL_AMNT_ERROR,
     WM_PRICE_TKT_TYPE,
     MONETARY_VALUE,
     MV_CURRENCY_CD,
     WM_MV_SIZE_UOM_ID,
     CD_DT_PROMPT_METHOD_FLAG,
     MIN_RECV_TO_XPIRE_DAYS,
     MIN_PCNT_FOR_LPN_SPLIT,
     MIN_LPN_QTY_FOR_SPLIT,
     WM_PROD_CATGRY,
     PRICE_TIX_AVAIL_FLAG,
     USER_ID,
     UN_NBR,
     HAZMAT_ID,
     WM_PRODUCT_CLASS,
     WM_COMMODITY_CD_SHORT_DESC,
     DSP_QTY_UOM,
     DB_QTY_UOM,
     STD_CASE_QTY,
     STD_CASE_WT,
     STD_CASE_VOL,
     STD_CASE_LEN,
     STD_CASE_WIDTH,
     STD_CASE_HT,
     STD_PACK_QTY,
     STD_PACK_WT,
     STD_PACK_VOL,
     STD_PACK_LEN,
     STD_PACK_WIDTH,
     STD_PACK_HT,
     STD_SUB_PACK_QTY,
     STD_SUB_PACK_WT,
     STD_SUB_PACK_VOL,
     STD_SUB_PACK_LEN,
     STD_SUB_PACK_WIDTH,
     STD_SUB_PACK_HT,
     STD_TIER_QTY,
     STD_BUNDL_QTY,
     STD_PLT_QTY,
     MARKS_NBRS,
     NET_COST_FLAG,
     PRODUCER_FLAG,
     PREF_CRIT_FLAG,
     SRL_NBR_REQD
) AS
SELECT IC.LOCATION_ID, IC.WM_ITEM_ID, IC.ITEM_SEASON, IC.ITEM_SEASON_YEAR, IC.ITEM_STYLE, IC.ITEM_STYLE_SFX, IC.ITEM_COLOR, IC.ITEM_COLOR_SFX, IC.ITEM_SECOND_DIM, IC.ITEM_QUALITY, IC.ITEM_SIZE_DESC, IC.ITEM_BAR_CD, IC.WM_ITEM_DESC, IC.WM_ITEM_NAME, IC.COLOR_DESC, IC.WM_STAB_CD, '0' AS ITEM_ORIENTATION, IC.PROTN_FACTOR, ('0'::NUMERIC)::NUMERIC(4,2) AS CAVITY_LEN, ('0'::NUMERIC)::NUMERIC(4,2) AS CAVITY_WD, ('0'::NUMERIC)::NUMERIC(4,2) AS CAVITY_HT, ('0'::NUMERIC)::NUMERIC(4,2) AS INCREMENTAL_LEN, ('0'::NUMERIC)::NUMERIC(4,2) AS INCREMENTAL_WD, ('0'::NUMERIC)::NUMERIC(4,2) AS INCREMENTAL_HT, 'N' AS STACKABLE_ITEM, 0 AS MAX_NEST_NUMBER, CASE WHEN (IC.UNIT_HEIGHT NOTNULL) THEN IC.UNIT_HEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNIT_HT, CASE WHEN (IC.UNIT_LENGTH NOTNULL) THEN IC.UNIT_LENGTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNIT_LEN, CASE WHEN (IC.UNIT_WIDTH NOTNULL) THEN IC.UNIT_WIDTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNIT_WIDTH, CASE WHEN (IC.UNIT_WEIGHT NOTNULL) THEN IC.UNIT_WEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNIT_WT, CASE WHEN (IC.UNIT_VOLUME NOTNULL) THEN IC.UNIT_VOLUME WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNIT_VOL, IC.COMMODITY_LEVEL_DESC, IC.WM_ITEM_IMAGE_FILE_NAME, INT2(CASE WHEN (IC.WM_ITEM_STATUS_CD NOTNULL) THEN IC.WM_ITEM_STATUS_CD WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS STAT_CODE, ("VARCHAR"(IC.CATCH_WEIGHT_ITEM_FLAG))::VARCHAR(4) AS CATCH_WT, IC.WM_COMPANY_ID AS CD_MASTER_ID, IC.WM_ITEM_ID AS ITEM_MASTER_ID, IC.WM_AUDIT_CREATED_TSTMP AS CREATE_DATE_TIME, IC.WM_AUDIT_LAST_UPDATED_TSTMP AS MOD_DATE_TIME, 1 AS WM_VERSION_ID, 1 AS FTZ_HDR_ID, IC.ITEM_UPC_GTIN AS UPC_PRE_DIGIT, '' AS UPC_VENDOR_CODE, '' AS UPC_SRL_PROD_NBR, '' AS UPC_POST_DIGIT, IC.WM_ITEM_NAME AS SKU_ID, IW.NMFC_CD AS NMFC_CODE, IW.WM_SIZE_RANGE_CD AS SIZE_RANGE_CODE, IW.WM_SIZE_REL_POSN_IN_TABLE AS SIZE_REL_POSN_IN_TABLE, IW.WM_VOLTY_CD AS VOLTY_CODE, IW.WM_PKG_TYPE AS PKG_TYPE, IW.WM_PROD_SUB_GRP AS PROD_SUB_GRP, IC.WM_PROD_TYPE, IW.WM_PROD_LINE AS PROD_LINE, IW.WM_SALE_GRP AS SALE_GRP, INT4(CASE WHEN (IW.COORD_1 NOTNULL) THEN IW.COORD_1 WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS COORD_1, INT4(CASE WHEN (IW.COORD_2 NOTNULL) THEN IW.COORD_2 WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS COORD_2, IW.WM_CARTON_TYPE, (CASE WHEN (IW.WM_UNIT_PRICE NOTNULL) THEN IW.WM_UNIT_PRICE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END)::NUMERIC(9,2) AS WM_UNIT_PRICE, (CASE WHEN (IW.WM_RETAIL_PRICE NOTNULL) THEN IW.WM_RETAIL_PRICE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END)::NUMERIC(9,2) AS WM_RETAIL_PRICE, IW.WM_OPER_CD, CASE WHEN (IW.MAX_CASE_QTY NOTNULL) THEN IW.MAX_CASE_QTY WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS MAX_CASE_QTY, (CASE WHEN (IW.CUBE_MULT_QTY NOTNULL) THEN IW.CUBE_MULT_QTY WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END)::NUMERIC(9,2) AS CUBE_MULT_QTY, IW.NEST_VOL, INT4(IW.NEST_CNT) AS NEST_CNT, CASE WHEN (IW.UNITS_PER_PICK_ACTIVE NOTNULL) THEN IW.UNITS_PER_PICK_ACTIVE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNITS_PER_PICK_ACTIVE, IW.HNDL_ATTR_ACTIVE, CASE WHEN (IW.UNITS_PER_PICK_CASE_PICK NOTNULL) THEN IW.UNITS_PER_PICK_CASE_PICK WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNITS_PER_PICK_CASE_PICK, IW.HNDL_ATTR_CASE_PICK, CASE WHEN (IW.UNITS_PER_PICK_RESV NOTNULL) THEN IW.UNITS_PER_PICK_RESV WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS UNITS_PER_PICK_RESV, IW.HNDL_ATTR_RESV, INT4(CASE WHEN (IW.PROD_LIFE_IN_DAY NOTNULL) THEN IW.PROD_LIFE_IN_DAY WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS PROD_LIFE_IN_DAY, INT4(CASE WHEN (IW.MAX_RECV_TO_XPIRE_DAYS NOTNULL) THEN IW.MAX_RECV_TO_XPIRE_DAYS WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS MAX_RECV_TO_XPIRE_DAYS, CASE WHEN (IW.AVG_DLY_DMND NOTNULL) THEN IW.AVG_DLY_DMND WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS AVG_DLY_DMND, CASE WHEN (IW.WT_TOL_PCNT NOTNULL) THEN IW.WT_TOL_PCNT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS WT_TOL_PCNT, IW.WM_CONS_PRTY_DATE_CD AS CONS_PRTY_DATE_CODE, IW.CONS_PRTY_DATE_WINDOW, INT2(CASE WHEN (IW.CONS_PRTY_DATE_WINDOW_INCR NOTNULL) THEN IW.CONS_PRTY_DATE_WINDOW_INCR WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS CONS_PRTY_DATE_WINDOW_INCR, IW.ACTIVATION_DT, IW.ALLOW_RCPT_OLDER_ITEM_FLAG, CASE WHEN (IW.CRITCL_DIM_1 NOTNULL) THEN IW.CRITCL_DIM_1 WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS CRITCL_DIM_1, CASE WHEN (IW.CRITCL_DIM_2 NOTNULL) THEN IW.CRITCL_DIM_2 WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS CRITCL_DIM_2, CASE WHEN (IW.CRITCL_DIM_3 NOTNULL) THEN IW.CRITCL_DIM_3 WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS CRITCL_DIM_3, IW.MFG_DATE_REQD_FLAG, IW.XPIRE_DATE_REQD_FLAG, IW.SHIP_BY_DATE_REQD_FLAG, IW.ITEM_ATTR_REQD_FLAG, IW.BATCH_REQD_FLAG, IW.PROD_STAT_REQD_FLAG, IW.COUNTRY_OF_ORIGIN_REQD_FLAG, IW.WM_VENDOR_ITEM_NBR, IW.WM_PICK_WT_TOL_TYPE, INT2(CASE WHEN (IW.PICK_WT_TOL_AMT NOTNULL) THEN IW.PICK_WT_TOL_AMT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS PICK_WT_TOL_AMT, IW.WM_MHE_WT_TOL_TYPE, INT2(CASE WHEN (IW.MHE_WT_TOL_AMT NOTNULL) THEN IW.MHE_WT_TOL_AMT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS MHE_WT_TOL_AMT, IW.LOAD_ATTR, IW.TEMP_ZONE, IW.TRLR_TEMP_ZONE, IW.WM_PKT_CONSOL_ATTR, IW.WM_BUYER_DISP_CD, IW.WM_CRUSH_CD, IW.CONVEY_FLAG, IW.WM_STORE_DEPT, IW.WM_MERCH_TYPE, IW.WM_MERCH_GROUP, IW.SPL_INSTR_CD_1, IW.SPL_INSTR_CD_2, IW.SPL_INSTR_CD_3, IW.SPL_INSTR_CD_4, IW.SPL_INSTR_CD_5, IW.SPL_INSTR_CD_6, IW.SPL_INSTR_CD_7, IW.SPL_INSTR_CD_8, IW.SPL_INSTR_CD_9, IW.SPL_INSTR_CD_10, IW.SPL_INSTR_1, IW.SPL_INSTR_2, IW.PROMPT_FOR_VENDOR_ITEM_NBR_FLAG, IW.PROMPT_PACK_QTY_FLAG, IW.ECCN_NBR, IW.EXP_LICN_NBR, IW.EXP_LICN_XP_DT, IW.EXP_LICN_SYMBOL, IW.WM_ORGN_CERT_CD, IW.ITAR_EXEMPT_NBR, IW.FRT_CLASS, CASE WHEN (IW.WM_DFLT_BATCH_STAT NOTNULL) THEN IW.WM_DFLT_BATCH_STAT WHEN ('0' NOTNULL) THEN '0'::"VARCHAR" ELSE NULL::"VARCHAR" END AS WM_DFLT_BATCH_STAT, IW.DFLT_INCUB_LOCK, IW.BASE_INCUB_FLAG, INT2(CASE WHEN (IW.INCUB_DAYS NOTNULL) THEN IW.INCUB_DAYS WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS INCUB_DAYS, CASE WHEN (IW.INCUB_HOURS NOTNULL) THEN IW.INCUB_HOURS WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS INCUB_HOURS, IW.SRL_NBR_REQD_FLAG, INT2(CASE WHEN (IW.MINOR_SRL_NBR_REQ_FLAG NOTNULL) THEN IW.MINOR_SRL_NBR_REQ_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS MINOR_SRL_NBR_REQ_FLAG, INT2(CASE WHEN (IW.DUP_SRL_NBR_FLAG NOTNULL) THEN IW.DUP_SRL_NBR_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS DUP_SRL_NBR_FLAG, CASE WHEN (IW.MAX_RCPT_QTY NOTNULL) THEN IW.MAX_RCPT_QTY WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS MAX_RCPT_QTY, NULL::VARCHAR(1) AS FTZ_FLAG, NULL::VARCHAR(12) AS HTS_NBR, INT4(CASE WHEN (IW.CC_UNIT_TOLER_VALUE NOTNULL) THEN IW.CC_UNIT_TOLER_VALUE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS CC_UNIT_TOLER_VALUE, INT4(CASE WHEN (IW.CC_WGT_TOLER_VALUE NOTNULL) THEN IW.CC_WGT_TOLER_VALUE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS CC_WGT_TOLER_VALUE, INT4(CASE WHEN (IW.CC_DLR_TOLER_VALUE NOTNULL) THEN IW.CC_DLR_TOLER_VALUE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS CC_DLR_TOLER_VALUE, INT4(CASE WHEN (IW.CC_PCNT_TOLER_VALUE NOTNULL) THEN IW.CC_PCNT_TOLER_VALUE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS CC_PCNT_TOLER_VALUE, CASE WHEN (IW.VOCOLLECT_BASE_WT NOTNULL) THEN IW.VOCOLLECT_BASE_WT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS VOCOLLECT_BASE_WT, CASE WHEN (IW.VOCOLLECT_BASE_QTY NOTNULL) THEN IW.VOCOLLECT_BASE_QTY WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS VOCOLLECT_BASE_QTY, IW.VOCOLLECT_BASE_ITEM, INT2(CASE WHEN (IW.PICK_WT_TOL_AMNT_ERROR NOTNULL) THEN IW.PICK_WT_TOL_AMNT_ERROR WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS PICK_WT_TOL_AMNT_ERROR, IW.WM_PRICE_TKT_TYPE, (CASE WHEN (IW.MONETARY_VALUE NOTNULL) THEN IW.MONETARY_VALUE WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END)::NUMERIC(13,2) AS MONETARY_VALUE, IW.MV_CURRENCY_CD, IW.WM_MV_SIZE_UOM_ID, IW.CD_DT_PROMPT_METHOD_FLAG, INT4(CASE WHEN (IW.MIN_RECV_TO_XPIRE_DAYS NOTNULL) THEN IW.MIN_RECV_TO_XPIRE_DAYS WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS MIN_RECV_TO_XPIRE_DAYS, INT2(CASE WHEN (IW.MIN_PCNT_FOR_LPN_SPLIT NOTNULL) THEN IW.MIN_PCNT_FOR_LPN_SPLIT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS MIN_PCNT_FOR_LPN_SPLIT, CASE WHEN (IW.MIN_LPN_QTY_FOR_SPLIT NOTNULL) THEN IW.MIN_LPN_QTY_FOR_SPLIT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END AS MIN_LPN_QTY_FOR_SPLIT, IW.WM_PROD_CATGRY, IW.PRICE_TIX_AVAIL_FLAG, IC.WM_AUDIT_LAST_UPDATED_SOURCE AS USER_ID, UN.WM_UN_NBR_VALUE AS UN_NBR, '' AS HAZMAT_ID, PC.WM_PRODUCT_CLASS, CC.WM_COMMODITY_CD_SHORT_DESC, STU_DSP.WM_STANDARD_UOM_ABBREVIATION AS DSP_QTY_UOM, STU_DB.WM_STANDARD_UOM_ABBREVIATION AS DB_QTY_UOM, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'C'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_QTY NOTNULL) THEN IP.ITEM_PACKAGE_QTY WHEN (1 NOTNULL) THEN '1'::NUMERIC(1,0) ELSE NULL::"NUMERIC" END ELSE '1'::NUMERIC(1,0) END AS STD_CASE_QTY, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'C'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_WEIGHT NOTNULL) THEN IP.ITEM_PACKAGE_WEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_CASE_WT, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'C'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_VOLUME NOTNULL) THEN IP.ITEM_PACKAGE_VOLUME WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_CASE_VOL, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'C'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_LENGTH NOTNULL) THEN IP.ITEM_PACKAGE_LENGTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_CASE_LEN, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'C'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_WIDTH NOTNULL) THEN IP.ITEM_PACKAGE_WIDTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_CASE_WIDTH, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'C'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_HEIGHT NOTNULL) THEN IP.ITEM_PACKAGE_HEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_CASE_HT, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'K'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_QTY NOTNULL) THEN IP.ITEM_PACKAGE_QTY WHEN (1 NOTNULL) THEN '1'::NUMERIC(1,0) ELSE NULL::"NUMERIC" END ELSE '1'::NUMERIC(1,0) END AS STD_PACK_QTY, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'K'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_WEIGHT NOTNULL) THEN IP.ITEM_PACKAGE_WEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_PACK_WT, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'K'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_VOLUME NOTNULL) THEN IP.ITEM_PACKAGE_VOLUME WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_PACK_VOL, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'K'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_LENGTH NOTNULL) THEN IP.ITEM_PACKAGE_LENGTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_PACK_LEN, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'K'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_WIDTH NOTNULL) THEN IP.ITEM_PACKAGE_WIDTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_PACK_WIDTH, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'K'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_HEIGHT NOTNULL) THEN IP.ITEM_PACKAGE_HEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_PACK_HT, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'S'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_QTY NOTNULL) THEN IP.ITEM_PACKAGE_QTY WHEN (1 NOTNULL) THEN '1'::NUMERIC(1,0) ELSE NULL::"NUMERIC" END ELSE '1'::NUMERIC(1,0) END AS STD_SUB_PACK_QTY, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'S'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_WEIGHT NOTNULL) THEN IP.ITEM_PACKAGE_WEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_SUB_PACK_WT, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'S'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_VOLUME NOTNULL) THEN IP.ITEM_PACKAGE_VOLUME WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_SUB_PACK_VOL, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'S'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_LENGTH NOTNULL) THEN IP.ITEM_PACKAGE_LENGTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_SUB_PACK_LEN, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'S'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_WIDTH NOTNULL) THEN IP.ITEM_PACKAGE_WIDTH WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_SUB_PACK_WIDTH, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'S'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_HEIGHT NOTNULL) THEN IP.ITEM_PACKAGE_HEIGHT WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END ELSE '0'::NUMERIC END AS STD_SUB_PACK_HT, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'T'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_QTY NOTNULL) THEN IP.ITEM_PACKAGE_QTY WHEN (1 NOTNULL) THEN '1'::NUMERIC(1,0) ELSE NULL::"NUMERIC" END ELSE '1'::NUMERIC(1,0) END AS STD_TIER_QTY, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'B'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_QTY NOTNULL) THEN IP.ITEM_PACKAGE_QTY WHEN (1 NOTNULL) THEN '1'::NUMERIC(1,0) ELSE NULL::"NUMERIC" END ELSE '1'::NUMERIC(1,0) END AS STD_BUNDL_QTY, CASE WHEN (IP.WM_STANDARD_UOM_ABBREVIATION = 'P'::"VARCHAR") THEN CASE WHEN (IP.ITEM_PACKAGE_QTY NOTNULL) THEN IP.ITEM_PACKAGE_QTY WHEN (1 NOTNULL) THEN '1'::NUMERIC(1,0) ELSE NULL::"NUMERIC" END ELSE '1'::NUMERIC(1,0) END AS STD_PLT_QTY, 'NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN' AS MARKS_NBRS, 'N' AS NET_COST_FLAG, 'N' AS PRODUCER_FLAG, 'N' AS PREF_CRIT_FLAG, INT2(CASE WHEN (IW.SRL_NBR_REQD_FLAG NOTNULL) THEN IW.SRL_NBR_REQD_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END) AS SRL_NBR_REQD FROM (((((((ADMIN.WM_ITEM_CBO IC LEFT JOIN ADMIN.WM_ITEM_WMS IW ON (((IC.WM_ITEM_ID = IW.WM_ITEM_ID) AND (IC.LOCATION_ID = IW.LOCATION_ID)))) LEFT JOIN ADMIN.WM_UN_NUMBER UN ON (((UN.WM_UN_NBR_ID = IC.WM_UN_NBR_ID) AND (UN.LOCATION_ID = IC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_PRODUCT_CLASS PC ON ((((IC.WM_PRODUCT_CLASS_ID = PC.WM_PRODUCT_CLASS_ID) AND (IC.WM_COMPANY_ID = PC.WM_TC_COMPANY_ID)) AND (IC.LOCATION_ID = PC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_COMMODITY_CODE CC ON ((((IC.WM_COMMODITY_CD_ID = CC.WM_COMMODITY_CD_ID) AND (IC.WM_COMPANY_ID = CC.WM_TC_COMPANY_ID)) AND (IC.LOCATION_ID = CC.LOCATION_ID)))) LEFT JOIN (SELECT SIU.LOCATION_ID, SIU.WM_SIZE_UOM_ID, SIU.WM_STANDARD_UOM_ID, STU.WM_STANDARD_UOM_ABBREVIATION FROM (ADMIN.WM_STANDARD_UOM STU JOIN ADMIN.WM_SIZE_UOM SIU ON (((SIU.WM_STANDARD_UOM_ID = STU.WM_STANDARD_UOM_ID) AND (SIU.LOCATION_ID = STU.LOCATION_ID))))) STU_DSP ON (((IC.WM_DISPLAY_QTY_UOM_ID = STU_DSP.WM_SIZE_UOM_ID) AND (IC.LOCATION_ID = STU_DSP.LOCATION_ID)))) LEFT JOIN (SELECT SIU.LOCATION_ID, SIU.WM_SIZE_UOM_ID, SIU.WM_STANDARD_UOM_ID, STU.WM_STANDARD_UOM_ABBREVIATION FROM (ADMIN.WM_STANDARD_UOM STU JOIN ADMIN.WM_SIZE_UOM SIU ON (((SIU.WM_STANDARD_UOM_ID = STU.WM_STANDARD_UOM_ID) AND (SIU.LOCATION_ID = STU.LOCATION_ID))))) STU_DB ON ((((IC.WM_DISPLAY_QTY_UOM_ID = STU_DB.WM_SIZE_UOM_ID) AND (IC.WM_BASE_STORAGE_UOM_ID = STU_DB.WM_SIZE_UOM_ID)) AND (IC.LOCATION_ID = STU_DB.LOCATION_ID)))) LEFT JOIN (SELECT IPC.LOCATION_ID, IPC.WM_ITEM_ID, IPC.ITEM_PACKAGE_QTY, IPC.ITEM_PACKAGE_WEIGHT, IPC.ITEM_PACKAGE_VOLUME, IPC.ITEM_PACKAGE_LENGTH, IPC.ITEM_PACKAGE_WIDTH, IPC.ITEM_PACKAGE_HEIGHT, STU.WM_STANDARD_UOM_ABBREVIATION FROM ((ADMIN.WM_ITEM_PACKAGE_CBO IPC JOIN ADMIN.WM_SIZE_UOM SIU ON (((SIU.WM_SIZE_UOM_ID = IPC.WM_PACKAGE_UOM_ID) AND (SIU.LOCATION_ID = IPC.LOCATION_ID)))) JOIN ADMIN.WM_STANDARD_UOM STU ON (((SIU.WM_STANDARD_UOM_ID = STU.WM_STANDARD_UOM_ID) AND (SIU.LOCATION_ID = STU.LOCATION_ID)))) WHERE ((IPC.MARK_FOR_DELETION_FLAG = '0'::NUMERIC) AND (IPC.STANDARD_UOM_FLAG = '1'::NUMERIC(1,0)))) IP ON (((IC.LOCATION_ID = IP.LOCATION_ID) AND (IC.WM_ITEM_ID = IP.WM_ITEM_ID))));

\echo
\echo *****  Creating view:  "WM_LM_CONFIG_VW"

CREATE or replace VIEW  WM_LM_CONFIG_VW
(
     LOCATION_ID,
     WM_ACT_ID,
     WM_ELM_ID,
     WM_CRIT_ID,
     WM_CRIT_VAL_ID,
     RULE_SEQ_NBR,
     ACT_ELM_CRIT_TIME_ALLOW,
     WM_WHSE,
     LM_KIOSK_REQ_APRV_FLAG,
     LM_MAN_EVNT_REQ_APRV_FLAG,
     WM_VHCL_TYPE_ID,
     REQ_APRV_FLAG,
     WM_JOB_FUNC_ID,
     WM_LABOR_ACTIVITY_ID,
     WM_LABOR_TYPE_ID,
     ACT_ELM_TIME_ALLOW,
     WM_DEPT_CD,
     WM_DEPT_ID,
     WM_DEPT_DESC,
     CORE_FLAG,
     WM_ELM_DESC,
     WM_ELM_NAME,
     WM_MSRMNT_ID,
     WM_JOB_FUNCTION_DESC,
     WM_JOB_FUNCTION_ID,
     WM_JOB_FUNCTION_NAME,
     RETRAIN_PERIOD,
     TRAIN_PERIOD,
     TRAINING_REQD_FLAG,
     TRANSITION_END_TIME,
     TRANSITION_START_TIME,
     WM_LABOR_ACTIVITY_DESC,
     WM_LABOR_ACTIVITY_NAME,
     WM_LABOR_TYPE_DESC,
     WM_LABOR_TYPE_CD,
     MISC_TXT_1,
     WM_CRIT_CD,
     WM_CRIT_DESC,
     CALC_SEQ_NBR,
     WM_CALC_TYPE_CD,
     CALC_FIELD,
     FREE_FORM_TEXT,
     ELSE_STATEMENT,
     WM_RULE_NBR,
     STATUS_FLAG,
     THEN_STATEMENT,
     WM_MSRMNT_CD,
     WM_MSRMNT_NAME,
     WM_CRIT_VAL
) AS
SELECT A.LOCATION_ID, A.WM_ACT_ID, AE.WM_ELM_ID, ACRIT.WM_CRIT_ID, ACRIT.WM_CRIT_VAL_ID, MRCON.RULE_SEQ_NBR, ACRIT.TIME_ALLOW AS ACT_ELM_CRIT_TIME_ALLOW, A.WM_WHSE, A.LM_KIOSK_REQ_APRV_FLAG, A.LM_MAN_EVNT_REQ_APRV_FLAG, A.WM_VHCL_TYPE_ID, A.REQ_APRV_FLAG, A.WM_JOB_FUNC_ID, A.WM_LABOR_ACTIVITY_ID, A.WM_LABOR_TYPE_ID, AE.TIME_ALLOW AS ACT_ELM_TIME_ALLOW, D.WM_DEPT_CD, D.WM_DEPT_ID, D.WM_DEPT_DESC, E.CORE_FLAG, E.WM_ELM_DESC, E.WM_ELM_NAME, E.WM_MSRMNT_ID, JF.WM_JOB_FUNCTION_DESC, JF.WM_JOB_FUNCTION_ID, JF.WM_JOB_FUNCTION_NAME, JF.RETRAIN_PERIOD, JF.TRAIN_PERIOD, JF.TRAINING_REQD_FLAG, JF.TRANSITION_END_TIME, JF.TRANSITION_START_TIME, LA.WM_LABOR_ACTIVITY_DESC, LA.WM_LABOR_ACTIVITY_NAME, LTE.WM_LABOR_TYPE_DESC, LTE.WM_LABOR_TYPE_CD, LTE.MISC_TXT_1, LC.WM_CRIT_CD, LC.WM_CRIT_DESC, MRC.CALC_SEQ_NBR, MRC.WM_CALC_TYPE_CD, MRC.CALC_FIELD, MRCON.FREE_FORM_TEXT, MR.ELSE_STATEMENT, MR.WM_RULE_NBR, MR.STATUS_FLAG, MR.THEN_STATEMENT, M.WM_MSRMNT_CD, M.WM_MSRMNT_NAME, VCRIT.WM_CRIT_VAL FROM (((((((((((((ADMIN.WM_E_JOB_FUNCTION JF LEFT JOIN ADMIN.WM_E_ACT A ON (((A.WM_JOB_FUNC_ID = JF.WM_JOB_FUNCTION_ID) AND (A.LOCATION_ID = JF.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LABOR_ACTIVITY LA ON (((A.WM_LABOR_ACTIVITY_ID = LA.WM_LABOR_ACTIVITY_ID) AND (A.LOCATION_ID = LA.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_DEPT D ON (((JF.WM_DEPT_CD = D.WM_DEPT_CD) AND (JF.LOCATION_ID = D.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_LABOR_TYPE_CODE LTE ON (((A.WM_LABOR_TYPE_ID = LTE.WM_LABOR_TYPE_ID) AND (A.LOCATION_ID = LTE.LOCATION_ID)))) JOIN ADMIN.WM_E_ACT_ELM AE ON (((A.WM_ACT_ID = AE.WM_ACT_ID) AND (A.LOCATION_ID = AE.LOCATION_ID)))) JOIN ADMIN.WM_E_ELM E ON (((AE.WM_ELM_ID = E.WM_ELM_ID) AND (AE.LOCATION_ID = E.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT M ON (((E.WM_MSRMNT_ID = M.WM_MSRMNT_ID) AND (E.LOCATION_ID = M.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT_RULE MR ON (((M.WM_MSRMNT_ID = MR.WM_MSRMNT_ID) AND (M.LOCATION_ID = MR.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT_RULE_CALC MRC ON ((((M.WM_MSRMNT_ID = MRC.WM_MSRMNT_ID) AND (MR.WM_RULE_NBR = MRC.WM_RULE_NBR)) AND (MR.LOCATION_ID = MRC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT_RULE_CONDITION MRCON ON ((((M.WM_MSRMNT_ID = MRCON.WM_MSRMNT_ID) AND (MR.WM_RULE_NBR = MRCON.WM_RULE_NBR)) AND (MR.LOCATION_ID = MRCON.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_ACT_ELM_CRIT ACRIT ON ((((AE.WM_ACT_ID = ACRIT.WM_ACT_ID) AND (AE.WM_ELM_ID = ACRIT.WM_ELM_ID)) AND (AE.LOCATION_ID = ACRIT.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LABOR_CRITERIA LC ON (((ACRIT.WM_CRIT_ID = LC.WM_CRIT_ID) AND (ACRIT.LOCATION_ID = LC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_CRIT_VAL VCRIT ON (((ACRIT.WM_CRIT_ID = VCRIT.WM_CRIT_ID) AND (ACRIT.LOCATION_ID = VCRIT.LOCATION_ID)))) WHERE ((((((((((CASE WHEN (A.DELETE_FLAG NOTNULL) THEN A.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC) AND (CASE WHEN (AE.DELETE_FLAG NOTNULL) THEN AE.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (ACRIT.DELETE_FLAG NOTNULL) THEN ACRIT.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (VCRIT.DELETE_FLAG NOTNULL) THEN VCRIT.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (E.DELETE_FLAG NOTNULL) THEN E.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (LTE.DELETE_FLAG NOTNULL) THEN LTE.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (MRC.DELETE_FLAG NOTNULL) THEN MRC.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (MRCON.DELETE_FLAG NOTNULL) THEN MRCON.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (LA.DELETE_FLAG NOTNULL) THEN LA.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (LC.DELETE_FLAG NOTNULL) THEN LC.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC));

\echo
\echo *****  Creating view:  "WM_LM_IDENTITY_VW"

CREATE or replace VIEW  WM_LM_IDENTITY_VW
(
     LOCATION_ID,
     WM_ACT_ID,
     WM_ELM_ID,
     WM_CRIT_ID,
     WM_CRIT_VAL_ID,
     RULE_SEQ_NBR,
     ACT_ELM_CRIT_TIME_ALLOW,
     WM_WHSE,
     LM_KIOSK_REQ_APRV_FLAG,
     LM_MAN_EVNT_REQ_APRV_FLAG,
     WM_VHCL_TYPE_ID,
     REQ_APRV_FLAG,
     WM_JOB_FUNC_ID,
     WM_LABOR_ACTIVITY_ID,
     WM_LABOR_TYPE_ID,
     ACT_ELM_TIME_ALLOW,
     WM_DEPT_CD,
     WM_DEPT_ID,
     WM_DEPT_DESC,
     CORE_FLAG,
     WM_ELM_DESC,
     WM_ELM_NAME,
     WM_MSRMNT_ID,
     WM_JOB_FUNCTION_DESC,
     WM_JOB_FUNCTION_ID,
     WM_JOB_FUNCTION_NAME,
     RETRAIN_PERIOD,
     TRAIN_PERIOD,
     TRAINING_REQD_FLAG,
     TRANSITION_END_TIME,
     TRANSITION_START_TIME,
     WM_LABOR_ACTIVITY_DESC,
     WM_LABOR_ACTIVITY_NAME,
     WM_LABOR_TYPE_DESC,
     WM_LABOR_TYPE_CD,
     MISC_TXT_1,
     WM_CRIT_CD,
     WM_CRIT_DESC,
     CALC_SEQ_NBR,
     WM_CALC_TYPE_CD,
     CALC_FIELD,
     FREE_FORM_TEXT,
     ELSE_STATEMENT,
     WM_RULE_NBR,
     STATUS_FLAG,
     THEN_STATEMENT,
     WM_MSRMNT_CD,
     WM_MSRMNT_NAME,
     WM_CRIT_VAL
) AS
SELECT A.LOCATION_ID, A.WM_ACT_ID, AE.WM_ELM_ID, ACRIT.WM_CRIT_ID, ACRIT.WM_CRIT_VAL_ID, MRCON.RULE_SEQ_NBR, ACRIT.TIME_ALLOW AS ACT_ELM_CRIT_TIME_ALLOW, A.WM_WHSE, A.LM_KIOSK_REQ_APRV_FLAG, A.LM_MAN_EVNT_REQ_APRV_FLAG, A.WM_VHCL_TYPE_ID, A.REQ_APRV_FLAG, A.WM_JOB_FUNC_ID, A.WM_LABOR_ACTIVITY_ID, A.WM_LABOR_TYPE_ID, AE.TIME_ALLOW AS ACT_ELM_TIME_ALLOW, D.WM_DEPT_CD, D.WM_DEPT_ID, D.WM_DEPT_DESC, E.CORE_FLAG, E.WM_ELM_DESC, E.WM_ELM_NAME, E.WM_MSRMNT_ID, JF.WM_JOB_FUNCTION_DESC, JF.WM_JOB_FUNCTION_ID, JF.WM_JOB_FUNCTION_NAME, JF.RETRAIN_PERIOD, JF.TRAIN_PERIOD, JF.TRAINING_REQD_FLAG, JF.TRANSITION_END_TIME, JF.TRANSITION_START_TIME, LA.WM_LABOR_ACTIVITY_DESC, LA.WM_LABOR_ACTIVITY_NAME, LTE.WM_LABOR_TYPE_DESC, LTE.WM_LABOR_TYPE_CD, LTE.MISC_TXT_1, LC.WM_CRIT_CD, LC.WM_CRIT_DESC, MRC.CALC_SEQ_NBR, MRC.WM_CALC_TYPE_CD, MRC.CALC_FIELD, MRCON.FREE_FORM_TEXT, MR.ELSE_STATEMENT, MR.WM_RULE_NBR, MR.STATUS_FLAG, MR.THEN_STATEMENT, M.WM_MSRMNT_CD, M.WM_MSRMNT_NAME, VCRIT.WM_CRIT_VAL FROM (((((((((((((ADMIN.WM_E_ACT A JOIN ADMIN.WM_E_JOB_FUNCTION JF ON (((A.WM_JOB_FUNC_ID = JF.WM_JOB_FUNCTION_ID) AND (A.LOCATION_ID = JF.LOCATION_ID)))) JOIN ADMIN.WM_E_DEPT D ON (((JF.WM_DEPT_CD = D.WM_DEPT_CD) AND (JF.LOCATION_ID = D.LOCATION_ID)))) JOIN ADMIN.WM_LABOR_ACTIVITY LA ON (((A.WM_LABOR_ACTIVITY_ID = LA.WM_LABOR_ACTIVITY_ID) AND (A.LOCATION_ID = LA.LOCATION_ID)))) JOIN ADMIN.WM_E_ACT_ELM AE ON (((A.WM_ACT_ID = AE.WM_ACT_ID) AND (A.LOCATION_ID = AE.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_ACT_ELM_CRIT ACRIT ON ((((AE.WM_ACT_ID = ACRIT.WM_ACT_ID) AND (AE.WM_ELM_ID = ACRIT.WM_ELM_ID)) AND (AE.LOCATION_ID = ACRIT.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_ELM E ON (((AE.WM_ELM_ID = E.WM_ELM_ID) AND (AE.LOCATION_ID = E.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_CRIT_VAL VCRIT ON ((((ACRIT.WM_CRIT_ID = VCRIT.WM_CRIT_ID) AND (ACRIT.WM_CRIT_VAL_ID = VCRIT.WM_CRIT_VAL_ID)) AND (ACRIT.LOCATION_ID = VCRIT.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_LABOR_TYPE_CODE LTE ON (((A.WM_LABOR_TYPE_ID = LTE.WM_LABOR_TYPE_ID) AND (A.LOCATION_ID = LTE.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LABOR_CRITERIA LC ON (((VCRIT.WM_CRIT_ID = LC.WM_CRIT_ID) AND (VCRIT.LOCATION_ID = LC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT M ON (((E.WM_MSRMNT_ID = M.WM_MSRMNT_ID) AND (E.LOCATION_ID = M.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT_RULE MR ON (((M.WM_MSRMNT_ID = MR.WM_MSRMNT_ID) AND (M.LOCATION_ID = MR.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT_RULE_CALC MRC ON ((((M.WM_MSRMNT_ID = MRC.WM_MSRMNT_ID) AND (MR.WM_RULE_NBR = MRC.WM_RULE_NBR)) AND (MR.LOCATION_ID = MRC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_MSRMNT_RULE_CONDITION MRCON ON ((((M.WM_MSRMNT_ID = MRCON.WM_MSRMNT_ID) AND (MR.WM_RULE_NBR = MRCON.WM_RULE_NBR)) AND (MR.LOCATION_ID = MRCON.LOCATION_ID)))) WHERE ((((((((((CASE WHEN (A.DELETE_FLAG NOTNULL) THEN A.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC) AND (CASE WHEN (AE.DELETE_FLAG NOTNULL) THEN AE.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (ACRIT.DELETE_FLAG NOTNULL) THEN ACRIT.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (VCRIT.DELETE_FLAG NOTNULL) THEN VCRIT.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (E.DELETE_FLAG NOTNULL) THEN E.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (LTE.DELETE_FLAG NOTNULL) THEN LTE.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (MRC.DELETE_FLAG NOTNULL) THEN MRC.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (MRCON.DELETE_FLAG NOTNULL) THEN MRCON.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (LA.DELETE_FLAG NOTNULL) THEN LA.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (LC.DELETE_FLAG NOTNULL) THEN LC.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC));

\echo
\echo *****  Creating view:  "WM_LOCATION_IDENTITY_VW"

CREATE or replace VIEW  WM_LOCATION_IDENTITY_VW
(
     LOCATION_ID,
     WM_LOCN_ID,
     WM_PICK_LOCN_HDR_ID,
     WM_DOCK_DOOR_DESC,
     WM_DOCK_DOOR_ID,
     WM_DOCK_DOOR_LOCN_ID,
     WM_DOCK_DOOR_NAME,
     WM_DOCK_ID,
     WM_ILM_APPOINTMENT_NBR,
     WM_SORT_ZONE,
     AISLE,
     AREA,
     BAY,
     WM_CHECK_DIGIT,
     WM_CREATE_TSTMP,
     WM_DSP_LOCN,
     HT,
     WM_LAST_CNT_TSTMP,
     WM_LAST_FROZN_TSTMP,
     LEN,
     WM_LOCN_BRCD,
     WM_LOCN_CLASS,
     WM_LOCN_DYN_ASSGN_SEQ,
     WM_LOCN_PICK_SEQ,
     WM_LOCN_PUTWY_SEQ,
     LVL,
     WM_PICK_DETRM_ZONE,
     POSN,
     WM_PULL_ZONE,
     WM_PUTWY_ZONE,
     WM_SKU_DEDCTN_TYPE,
     WM_SLOT_TYPE,
     SLOT_UNUSABLE_FLAG,
     TRAVEL_AISLE,
     TRAVEL_ZONE,
     WM_WHSE,
     WIDTH,
     WM_WORK_AREA,
     WM_WORK_GRP,
     X_COORD,
     Y_COORD,
     Z_COORD,
     ZONE,
     WM_COMB_4050_REPL,
     PICK_LOCN_INVN_LOCK_CD,
     WM_LOCN_PUTAWAY_LOCK,
     MAX_NBR_OF_SKU,
     PICK_LOCN_MAX_VOL,
     PICK_LOCN_MAX_WT,
     WM_PICK_LOCN_ASSIGN_TYPE,
     PICK_TO_LIGHT_FLAG,
     PICK_TO_LIGHT_REPL_FLAG,
     WM_PUTWY_TYPE,
     WM_REPL_CHECK_DIGIT,
     WM_REPL_FLAG,
     WM_REPL_LOCN_BRCD,
     WM_REPL_TRAVEL_AISLE,
     WM_REPL_TRAVEL_ZONE,
     REPL_X_COORD,
     REPL_Y_COORD,
     REPL_Z_COORD,
     WM_SUPPR_PR40_REPL,
     WM_CREATED_TSTMP,
     LOCK_COUNTER,
     CURR_UOM_QTY,
     CURR_VOL,
     CURR_WT,
     WM_DEDCTN_ITEM_ID,
     DEDCTN_PACK_QTY,
     DIRCT_UOM_QTY,
     DIRCT_VOL,
     DIRCT_WT,
     INBD_STAGING_FLAG,
     WM_LOCN_SIZE_TYPE,
     RESV_LOCN_MAX_UOM_QTY,
     RESV_LOCN_MAX_VOL,
     RESV_LOCN_MAX_WT,
     SORT_LOCN_FLAG,
     RESV_LOCN_INVN_LOCK_CD,
     LOCK_TRAILER_ON_MOVE_TO_DOOR_FLAG,
     LOWER_CHECK_IN_TIME_MINS,
     UPPER_CHECK_IN_TIME_MINS,
     WM_YARD_NAME,
     WM_YARD_ID,
     PUTAWAY_ELIGIBLE_FLAG,
     WM_YARD_ZONE_NAME,
     WM_YARD_ZONE_ID,
     GUARD_HOUSE_FLAG,
     MAX_CAPACITY,
     USED_CAPACITY,
     WM_YARD_ZONE_SLOT_NAME,
     WM_YARD_ZONE_SLOT_STATUS
) AS
SELECT LH.LOCATION_ID, LH.WM_LOCN_ID, PLH.WM_PICK_LOCN_HDR_ID, DD.WM_DOCK_DOOR_DESC, DD.WM_DOCK_DOOR_ID, DD.WM_DOCK_DOOR_LOCN_ID, DD.WM_DOCK_DOOR_NAME, DD.WM_DOCK_ID, DD.WM_ILM_APPOINTMENT_NBR, DD.WM_SORT_ZONE, LH.AISLE, LH.AREA, LH.BAY, LH.WM_CHECK_DIGIT, LH.WM_CREATE_TSTMP, LH.WM_DSP_LOCN, LH.HT, LH.WM_LAST_CNT_TSTMP, LH.WM_LAST_FROZN_TSTMP, LH.LEN, LH.WM_LOCN_BRCD, LH.WM_LOCN_CLASS, LH.WM_LOCN_DYN_ASSGN_SEQ, LH.WM_LOCN_PICK_SEQ, LH.WM_LOCN_PUTWY_SEQ, LH.LVL, LH.WM_PICK_DETRM_ZONE, LH.POSN, LH.WM_PULL_ZONE, LH.WM_PUTWY_ZONE, LH.WM_SKU_DEDCTN_TYPE, LH.WM_SLOT_TYPE, LH.SLOT_UNUSABLE_FLAG, LH.TRAVEL_AISLE, LH.TRAVEL_ZONE, LH.WM_WHSE, LH.WIDTH, LH.WM_WORK_AREA, LH.WM_WORK_GRP, LH.X_COORD, LH.Y_COORD, LH.Z_COORD, LH."ZONE", PLH.WM_COMB_4050_REPL, PLH.WM_INVN_LOCK_CD AS PICK_LOCN_INVN_LOCK_CD, PLH.WM_LOCN_PUTAWAY_LOCK, PLH.MAX_NBR_OF_SKU, PLH.MAX_VOL AS PICK_LOCN_MAX_VOL, PLH.MAX_WT AS PICK_LOCN_MAX_WT, PLH.WM_PICK_LOCN_ASSIGN_TYPE, PLH.PICK_TO_LIGHT_FLAG, PLH.PICK_TO_LIGHT_REPL_FLAG, PLH.WM_PUTWY_TYPE, PLH.WM_REPL_CHECK_DIGIT, PLH.WM_REPL_FLAG, PLH.WM_REPL_LOCN_BRCD, PLH.WM_REPL_TRAVEL_AISLE, PLH.WM_REPL_TRAVEL_ZONE, PLH.REPL_X_COORD, PLH.REPL_Y_COORD, PLH.REPL_Z_COORD, PLH.WM_SUPPR_PR40_REPL, PL.WM_CREATED_TSTMP, PL.LOCK_COUNTER, RLH.CURR_UOM_QTY, RLH.CURR_VOL, RLH.CURR_WT, RLH.WM_DEDCTN_ITEM_ID, RLH.DEDCTN_PACK_QTY, RLH.DIRCT_UOM_QTY, RLH.DIRCT_VOL, RLH.DIRCT_WT, RLH.INBD_STAGING_FLAG, RLH.WM_LOCN_SIZE_TYPE, RLH.MAX_UOM_QTY AS RESV_LOCN_MAX_UOM_QTY, RLH.MAX_VOL AS RESV_LOCN_MAX_VOL, RLH.MAX_WT AS RESV_LOCN_MAX_WT, RLH.SORT_LOCN_FLAG, RLH.WM_INVN_LOCK_CD AS RESV_LOCN_INVN_LOCK_CD, Y.LOCK_TRAILER_ON_MOVE_TO_DOOR_FLAG, Y.LOWER_CHECK_IN_TIME_MINS, Y.UPPER_CHECK_IN_TIME_MINS, Y.WM_YARD_NAME, Y.WM_YARD_ID, YZ.PUTAWAY_ELIGIBLE_FLAG, YZ.WM_YARD_ZONE_NAME, YZS.WM_YARD_ZONE_ID, YZS.GUARD_HOUSE_FLAG, YZS.MAX_CAPACITY, YZS.USED_CAPACITY, YZS.WM_YARD_ZONE_SLOT_NAME, YZS.WM_YARD_ZONE_SLOT_STATUS FROM (((((((ADMIN.WM_LOCN_HDR LH LEFT JOIN ADMIN.WM_PICK_LOCN_HDR PLH ON (((LH.WM_LOCN_ID = PLH.WM_LOCN_ID) AND (LH.LOCATION_ID = PLH.LOCATION_ID)))) LEFT JOIN ADMIN.WM_RESV_LOCN_HDR RLH ON (((LH.WM_LOCN_ID = RLH.WM_LOCN_ID) AND (LH.LOCATION_ID = RLH.LOCATION_ID)))) LEFT JOIN ADMIN.WM_PUTAWAY_LOCK PL ON (((LH.WM_LOCN_ID = PL.WM_LOCN_ID) AND (LH.LOCATION_ID = PL.LOCATION_ID)))) LEFT JOIN ADMIN.WM_DOCK_DOOR DD ON (((LH.WM_LOCN_ID = DD.WM_DOCK_DOOR_LOCN_ID) AND (LH.LOCATION_ID = DD.LOCATION_ID)))) LEFT JOIN ADMIN.WM_YARD_ZONE_SLOT YZS ON (((LH.WM_LOCN_ID = YZS.WM_LOCN_ID) AND (LH.LOCATION_ID = YZS.LOCATION_ID)))) LEFT JOIN ADMIN.WM_YARD_ZONE YZ ON (((YZS.WM_YARD_ZONE_ID = YZ.WM_YARD_ZONE_ID) AND (YZS.LOCATION_ID = YZ.LOCATION_ID)))) LEFT JOIN ADMIN.WM_YARD Y ON (((YZ.WM_YARD_ID = Y.WM_YARD_ID) AND (YZ.LOCATION_ID = Y.LOCATION_ID)))) WHERE (((((CASE WHEN (PLH.DELETE_FLAG NOTNULL) THEN PLH.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC) AND (CASE WHEN (RLH.DELETE_FLAG NOTNULL) THEN RLH.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (PL.DELETE_FLAG NOTNULL) THEN PL.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (YZ.DELETE_FLAG NOTNULL) THEN YZ.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (YZS.DELETE_FLAG NOTNULL) THEN YZS.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC));

\echo
\echo *****  Creating view:  "WM_LPN_IDENTITY_VW"

CREATE or replace VIEW  WM_LPN_IDENTITY_VW
(
     LOCATION_ID,
     WM_LPN_ID,
     WM_LPN_DETAIL_ID,
     WM_LPN_LOCK_ID,
     WM_OUTPT_LPN_ID,
     WM_OUTPT_LPN_DETAIL_ID,
     WM_BUSINESSS_PARTNER_DESC,
     WM_ASN_DTL_ID,
     ASSIGNED_QTY,
     WM_CHASE_WAVE_NBR,
     WM_DISTRIBUTION_ORDER_DTL_ID,
     WM_GTIN,
     INITIAL_QTY,
     WM_INTERNAL_ORDER_DTL_ID,
     WM_LPN_DETAIL_STATUS,
     WM_PURCHASE_ORDERS_LINE_ID,
     WM_QTY_UOM_ID,
     WM_RECEIVED_QTY,
     SHIPPED_QTY,
     SIZE_VALUE,
     WM_TC_ORDER_LINE_ID,
     WM_TC_PURCHASE_ORDERS_LINE_ID,
     WM_VOLUME_UOM_ID,
     WM_WEIGHT_UOM_ID,
     WM_LPN_FACILITY_STATUS_DESC,
     WM_INVENTORY_LOCK_CD,
     LOCK_CNT,
     WM_REASON_CD,
     WM_PARENT_LPN_ID,
     ACTUAL_VOLUME,
     WM_ASN_ID,
     WM_AUDITOR_USER_ID,
     WM_BOL_NBR,
     WM_BUSINESS_PARTNER_ID,
     WM_C_FACILITY_ALIAS_ID,
     WM_C_FACILITY_ID,
     WM_CONSUMPTION_PRIORITY_TSTMP,
     CONTAINER_SIZE,
     CONTAINER_TYPE,
     CONTAINS_DRY_ICE_FLAG,
     CONVEYABLE_LPN_FLAG,
     WM_CREATED_TSTMP,
     WM_CURR_SUB_LOCN_ID,
     WM_D_FACILITY_ALIAS_ID,
     WM_D_FACILITY_ID,
     WM_DEST_SUB_LOCN_ID,
     ERROR_FLAG,
     WM_EXPIRATION_DT,
     WM_EXT_CREATED_TSTMP,
     WM_FINAL_DEST_FACILITY_ALIAS_ID,
     WM_FINAL_DEST_FACILITY_ID,
     WM_FRT_FORWARDER_ACCT_NBR,
     HEIGHT,
     INBOUND_OUTBOUND_INDICATOR,
     WM_INIT_SHIP_VIA,
     WM_INTERNAL_ORDER_ID,
     CHASE_CREATED_FLAG,
     WM_ITEM_ID,
     WM_ITEM_NAME,
     LABEL_PRINT_REQD_FLAG,
     WM_LAST_COUNTED_TSTMP,
     WM_LAST_FROZEN_TSTMP,
     LAST_ZONE,
     LENGTH,
     WM_LOAD_SEQUENCE,
     WM_LOADED_TSTMP,
     WM_LOADED_POSN,
     WM_LOADER_USER_ID,
     LPN_BREAK_ATTR,
     WM_LPN_CREATION_CD,
     WM_LPN_FACILITY_STATUS,
     WM_LPN_LABEL_TYPE,
     LPN_NBR_X_OF_Y,
     LPN_SHIPPED_FLAG,
     WM_LPN_SIZE_TYPE_ID,
     WM_LPN_STATUS,
     WM_LPN_TYPE,
     WM_MANUFACTURED_TSTMP,
     WM_MASTER_BOL_NBR,
     MASTER_LPN_FLAG,
     MISC_INSTR_CD_1,
     MISC_INSTR_CD_5,
     NON_INVENTORY_LPN_FLAG,
     WM_O_FACILITY_ALIAS_ID,
     WM_O_FACILITY_ID,
     WM_ORDER_ID,
     WM_ORIGINAL_TC_SHIPMENT_ID,
     WM_PACKER_USER_ID,
     PALLET_OPEN_FLAG,
     WM_PICK_SUB_LOCN_ID,
     WM_PLANNED_TC_ASN_ID,
     WM_PREV_SUB_LOCN_ID,
     PROCESS_IMMEDIATE_NEEDS_FLAG,
     WM_PURCHASE_ORDERS_ID,
     WM_PUTAWAY_TYPE,
     QA_FLAG,
     WM_QUAL_AUD_STAT_CD,
     WM_RCVD_TSTMP,
     RECEIPT_VARIANCE_FLAG,
     WM_RECEIVED_TC_SHIPMENT_ID,
     REF_FIELD_1,
     REF_FIELD_2,
     WM_SCHED_SHIP_TSTMP,
     WM_SCHEDULED_DELIVERY_TSTMP,
     WM_SHIP_BY_DT,
     WM_SHIP_VIA,
     WM_SHIPMENT_ID,
     WM_SHIPPED_TSTMP,
     SINGLE_LINE_LPN_FLAG,
     STAGE_INDICATOR,
     WM_STATIC_ROUTE_ID,
     WM_TC_ASN_ID,
     WM_TC_LPN_ID,
     WM_TC_ORDER_ID,
     WM_TC_PARENT_LPN_ID,
     WM_TC_PURCHASE_ORDERS_ID,
     WM_TC_REFERENCE_LPN_ID,
     WM_TC_SHIPMENT_ID,
     TOTAL_LPN_QTY,
     TRAILER_STOP_SEQ_NBR,
     WM_WAVE_NBR,
     WEIGHT,
     WIDTH,
     WM_LPN_STATUS_DESC,
     WM_LPN_SIZE_TYPE,
     WM_LPN_SIZE_DESC,
     WM_LPN_TYPE_DESC,
     WM_BILL_OF_LADING_NBR,
     WM_INVC_BATCH_NBR,
     PROC_TSTMP,
     WM_PROC_STAT_CD,
     QTY_UOM,
     VOLUME_UOM,
     WEIGHT_UOM,
     WM_MINOR_ORDER_NBR,
     WM_MINOR_PO_NBR
) AS
SELECT L.LOCATION_ID, L.WM_LPN_ID, LD.WM_LPN_DETAIL_ID, LL.WM_LPN_LOCK_ID, OL.WM_OUTPT_LPN_ID, OD.WM_OUTPT_LPN_DETAIL_ID, BP.WM_BUSINESSS_PARTNER_DESC, LD.WM_ASN_DTL_ID, LD.ASSIGNED_QTY, LD.WM_CHASE_WAVE_NBR, LD.WM_DISTRIBUTION_ORDER_DTL_ID, LD.WM_GTIN, LD.INITIAL_QTY, LD.WM_INTERNAL_ORDER_DTL_ID, LD.WM_LPN_DETAIL_STATUS, LD.WM_PURCHASE_ORDERS_LINE_ID, LD.WM_QTY_UOM_ID, LD.WM_RECEIVED_QTY, LD.SHIPPED_QTY, LD.SIZE_VALUE, LD.WM_TC_ORDER_LINE_ID, LD.WM_TC_PURCHASE_ORDERS_LINE_ID, LD.WM_VOLUME_UOM_ID, LD.WM_WEIGHT_UOM_ID, LFS.WM_LPN_FACILITY_STATUS_DESC, LL.WM_INVENTORY_LOCK_CD, LL.LOCK_CNT, LL.WM_REASON_CD, L.WM_PARENT_LPN_ID, L.ACTUAL_VOLUME, L.WM_ASN_ID, L.WM_AUDITOR_USER_ID, L.WM_BOL_NBR, L.WM_BUSINESS_PARTNER_ID, L.WM_C_FACILITY_ALIAS_ID, L.WM_C_FACILITY_ID, L.WM_CONSUMPTION_PRIORITY_TSTMP, L.CONTAINER_SIZE, L.CONTAINER_TYPE, L.CONTAINS_DRY_ICE_FLAG, L.CONVEYABLE_LPN_FLAG, L.WM_CREATED_TSTMP, L.WM_CURR_SUB_LOCN_ID, L.WM_D_FACILITY_ALIAS_ID, L.WM_D_FACILITY_ID, L.WM_DEST_SUB_LOCN_ID, L.ERROR_FLAG, L.WM_EXPIRATION_DT, L.WM_EXT_CREATED_TSTMP, L.WM_FINAL_DEST_FACILITY_ALIAS_ID, L.WM_FINAL_DEST_FACILITY_ID, L.WM_FRT_FORWARDER_ACCT_NBR, L.HEIGHT, L.INBOUND_OUTBOUND_INDICATOR, L.WM_INIT_SHIP_VIA, L.WM_INTERNAL_ORDER_ID, L.CHASE_CREATED_FLAG, L.WM_ITEM_ID, L.WM_ITEM_NAME, L.LABEL_PRINT_REQD_FLAG, L.WM_LAST_COUNTED_TSTMP, L.WM_LAST_FROZEN_TSTMP, L.LAST_ZONE, L.LENGTH, L.WM_LOAD_SEQUENCE, L.WM_LOADED_TSTMP, L.WM_LOADED_POSN, L.WM_LOADER_USER_ID, L.LPN_BREAK_ATTR, L.WM_LPN_CREATION_CD, L.WM_LPN_FACILITY_STATUS, L.WM_LPN_LABEL_TYPE, L.LPN_NBR_X_OF_Y, L.LPN_SHIPPED_FLAG, L.WM_LPN_SIZE_TYPE_ID, L.WM_LPN_STATUS, L.WM_LPN_TYPE, L.WM_MANUFACTURED_TSTMP, L.WM_MASTER_BOL_NBR, L.MASTER_LPN_FLAG, L.MISC_INSTR_CD_1, L.MISC_INSTR_CD_5, L.NON_INVENTORY_LPN_FLAG, L.WM_O_FACILITY_ALIAS_ID, L.WM_O_FACILITY_ID, L.WM_ORDER_ID, L.WM_ORIGINAL_TC_SHIPMENT_ID, L.WM_PACKER_USER_ID, L.PALLET_OPEN_FLAG, L.WM_PICK_SUB_LOCN_ID, L.WM_PLANNED_TC_ASN_ID, L.WM_PREV_SUB_LOCN_ID, L.PROCESS_IMMEDIATE_NEEDS_FLAG, L.WM_PURCHASE_ORDERS_ID, L.WM_PUTAWAY_TYPE, L.QA_FLAG, L.WM_QUAL_AUD_STAT_CD, L.WM_RCVD_TSTMP, L.RECEIPT_VARIANCE_FLAG, L.WM_RECEIVED_TC_SHIPMENT_ID, L.REF_FIELD_1, L.REF_FIELD_2, L.WM_SCHED_SHIP_TSTMP, L.WM_SCHEDULED_DELIVERY_TSTMP, L.WM_SHIP_BY_DT, L.WM_SHIP_VIA, L.WM_SHIPMENT_ID, L.WM_SHIPPED_TSTMP, L.SINGLE_LINE_LPN_FLAG, L.STAGE_INDICATOR, L.WM_STATIC_ROUTE_ID, L.WM_TC_ASN_ID, L.WM_TC_LPN_ID, L.WM_TC_ORDER_ID, L.WM_TC_PARENT_LPN_ID, L.WM_TC_PURCHASE_ORDERS_ID, L.WM_TC_REFERENCE_LPN_ID, L.WM_TC_SHIPMENT_ID, L.TOTAL_LPN_QTY, L.TRAILER_STOP_SEQ_NBR, L.WM_WAVE_NBR, L.WEIGHT, L.WIDTH, LS.WM_LPN_STATUS_DESC, LST.WM_LPN_SIZE_TYPE, LST.WM_LPN_SIZE_DESC, LT.WM_LPN_TYPE_DESC, OL.WM_BILL_OF_LADING_NBR, OL.WM_INVC_BATCH_NBR, OL.PROC_TSTMP, OL.WM_PROC_STAT_CD, OL.QTY_UOM, OL.VOLUME_UOM, OL.WEIGHT_UOM, OD.WM_MINOR_ORDER_NBR, OD.WM_MINOR_PO_NBR FROM (((((((((ADMIN.WM_LPN L LEFT JOIN ADMIN.WM_LPN_DETAIL LD ON (((L.WM_LPN_ID = LD.WM_LPN_ID) AND (L.LOCATION_ID = LD.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LPN_LOCK LL ON (((L.WM_LPN_ID = LL.WM_LPN_ID) AND (L.LOCATION_ID = LL.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LPN_STATUS LS ON (((L.WM_LPN_STATUS = LS.WM_LPN_STATUS) AND (L.LOCATION_ID = LS.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LPN_FACILITY_STATUS LFS ON ((((L.WM_LPN_FACILITY_STATUS = LFS.WM_LPN_FACILITY_STATUS) AND (L.INBOUND_OUTBOUND_INDICATOR = LFS.INBOUND_OUTBOUND_IND)) AND (L.LOCATION_ID = LFS.LOCATION_ID)))) LEFT JOIN ADMIN.WM_OUTPT_LPN OL ON (((L.WM_TC_LPN_ID = OL.WM_TC_LPN_ID) AND (L.LOCATION_ID = OL.LOCATION_ID)))) LEFT JOIN ADMIN.WM_OUTPT_LPN_DETAIL OD ON ((((OL.WM_TC_LPN_ID = OD.WM_TC_LPN_ID) AND (LD.WM_LPN_DETAIL_ID = OD.WM_LPN_DETAIL_ID)) AND (OL.LOCATION_ID = OD.LOCATION_ID)))) LEFT JOIN ADMIN.WM_BUSINESS_PARTNER BP ON (((L.WM_BUSINESS_PARTNER_ID = BP.WM_BUSINESS_PARTNER_ID) AND (L.LOCATION_ID = BP.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LPN_TYPE LT ON (((L.WM_LPN_TYPE = LT.WM_LPN_TYPE) AND (L.LOCATION_ID = LT.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LPN_SIZE_TYPE LST ON (((L.WM_LPN_SIZE_TYPE_ID = LST.WM_LPN_SIZE_TYPE_ID) AND (L.LOCATION_ID = LST.LOCATION_ID)))) WHERE (CASE WHEN (LL.DELETE_FLAG NOTNULL) THEN LL.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "WM_UCL_USER_VW"

CREATE or replace VIEW  WM_UCL_USER_VW
(
     LOCATION_ID,
     WM_UCL_USER_ID,
     WM_COMPANY_ID,
     WM_LOCATION_ID,
     WM_LOCALE_ID,
     WM_USER_TYPE_ID,
     ACTIVE_FLAG,
     USER_NAME,
     EMPLOYEE_ID,
     COMMON_NAME,
     USER_PREFIX,
     USER_TITLE,
     USER_FIRST_NAME,
     USER_MIDDLE_NAME,
     USER_LAST_NAME,
     BIRTH_DT,
     GENDER_ID,
     EMPLOYEE_START_DT,
     ADDR_1,
     ADDR_2,
     CITY,
     STATE_PROV_CD,
     POSTAL_CD,
     COUNTRY_CD,
     USER_EMAIL_1,
     USER_EMAIL_2,
     PHONE_NBR,
     FAX_NBR,
     WM_EXTERNAL_USER_ID,
     COPY_FROM_USER,
     WM_SECURITY_POLICY_GROUP_ID,
     DEFAULT_WM_BUSINESS_UNIT_ID,
     DEFAULT_WM_WHSE_REGION_ID,
     WM_CHANNEL_ID,
     WM_COMM_METHOD_ID_DURING_BH_1,
     WM_COMM_METHOD_ID_DURING_BH_2,
     WM_COMM_METHOD_ID_AFTER_BH_1,
     WM_COMM_METHOD_ID_AFTER_BH_2,
     PASSWORD_MANAGED_INTERNALLY_FLAG,
     LOGGED_IN_FLAG,
     LAST_LOGIN_TSTMP,
     NUMBER_OF_INVALID_LOGINS,
     PASSWORD_RESET_TSTMP,
     LAST_PASSWORD_CHANGE_TSTMP,
     WM_HIBERNATE_VERSION,
     WM_CREATED_SOURCE_TYPE_ID,
     WM_CREATED_SOURCE,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_SOURCE_TYPE_ID,
     WM_LAST_UPDATED_SOURCE,
     WM_LAST_UPDATED_TSTMP,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT U.LOCATION_ID, U.WM_UCL_USER_ID, U.WM_COMPANY_ID, U.WM_LOCATION_ID, U.WM_LOCALE_ID, U.WM_USER_TYPE_ID, U.ACTIVE_FLAG, U.USER_NAME, U.TAX_ID_NBR AS EMPLOYEE_ID, U.COMMON_NAME, U.USER_PREFIX, U.USER_TITLE, U.USER_FIRST_NAME, U.USER_MIDDLE_NAME, U.USER_LAST_NAME, U.BIRTH_DT, U.GENDER_ID, U.EMPLOYEE_START_DT, U.ADDR_1, U.ADDR_2, U.CITY, U.STATE_PROV_CD, U.POSTAL_CD, U.COUNTRY_CD, U.USER_EMAIL_1, U.USER_EMAIL_2, U.PHONE_NBR, U.FAX_NBR, U.WM_EXTERNAL_USER_ID, U.COPY_FROM_USER, U.WM_SECURITY_POLICY_GROUP_ID, U.DEFAULT_WM_BUSINESS_UNIT_ID, U.DEFAULT_WM_WHSE_REGION_ID, U.WM_CHANNEL_ID, U.WM_COMM_METHOD_ID_DURING_BH_1, U.WM_COMM_METHOD_ID_DURING_BH_2, U.WM_COMM_METHOD_ID_AFTER_BH_1, U.WM_COMM_METHOD_ID_AFTER_BH_2, U.PASSWORD_MANAGED_INTERNALLY_FLAG, U.LOGGED_IN_FLAG, U.LAST_LOGIN_TSTMP, U.NUMBER_OF_INVALID_LOGINS, U.PASSWORD_RESET_TSTMP, U.LAST_PASSWORD_CHANGE_TSTMP, U.WM_HIBERNATE_VERSION, U.WM_CREATED_SOURCE_TYPE_ID, U.WM_CREATED_SOURCE, U.WM_CREATED_TSTMP, U.WM_LAST_UPDATED_SOURCE_TYPE_ID, U.WM_LAST_UPDATED_SOURCE, U.WM_LAST_UPDATED_TSTMP, U.UPDATE_TSTMP, U.LOAD_TSTMP FROM ADMIN.WM_UCL_USER U WHERE ((((U.ACTIVE_FLAG = '1'::NUMERIC(1,0)) AND (BTRIM(U.TAX_ID_NBR) NOTNULL)) AND (BTRIM(U.TAX_ID_NBR) <> ''::"VARCHAR")) AND (LENGTH(BTRIM(TRANSLATE(U.TAX_ID_NBR, '0123456789'::"VARCHAR", ''::"VARCHAR"))) = 0));

\echo
\echo *****  Creating view:  "WM_LATEST_EMP_DTL_VW"

CREATE or replace VIEW  WM_LATEST_EMP_DTL_VW
(
     WM_EMP_ID,
     EFF_TSTMP,
     WM_EMP_STAT_ID,
     PAY_RATE,
     WM_PAY_SCALE_ID,
     WM_SUPERVISOR_EMP_ID,
     WM_DEPT_ID,
     WM_SHIFT_ID,
     WM_ROLE_ID,
     USER_DEF_FIELD_1,
     USER_DEF_FIELD_2,
     WM_COMMENT,
     WM_CREATE_TSTMP,
     WM_MOD_TSTMP,
     WM_USER_ID,
     WM_WHSE,
     LOCATION_ID,
     WM_JOB_FUNC_ID,
     STARTUP_TIME,
     CLEANUP_TIME,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     DFLT_PERF_GOAL,
     SUPERVISOR_FLAG,
     EXCLUDE_AUTO_CICO_FLAG
) AS
SELECT A.WM_EMP_ID, A.EFF_TSTMP, A.WM_EMP_STAT_ID, A.PAY_RATE, A.WM_PAY_SCALE_ID, A.WM_SUPERVISOR_EMP_ID, A.WM_DEPT_ID, A.WM_SHIFT_ID, A.WM_ROLE_ID, A.USER_DEF_FIELD_1, A.USER_DEF_FIELD_2, A.WM_COMMENT, A.WM_CREATE_TSTMP, A.WM_MOD_TSTMP, A.WM_USER_ID, A.WM_WHSE, A.LOCATION_ID, A.WM_JOB_FUNC_ID, A.STARTUP_TIME, A.CLEANUP_TIME, A.MISC_TXT_1, A.MISC_TXT_2, A.MISC_NUM_1, A.MISC_NUM_2, A.DFLT_PERF_GOAL, A.SUPERVISOR_FLAG, A.EXCLUDE_AUTO_CICO_FLAG FROM (SELECT WM_E_EMP_DTL.WM_EMP_ID, WM_E_EMP_DTL.EFF_TSTMP, WM_E_EMP_DTL.WM_EMP_STAT_ID, WM_E_EMP_DTL.PAY_RATE, WM_E_EMP_DTL.WM_PAY_SCALE_ID, WM_E_EMP_DTL.WM_SUPERVISOR_EMP_ID, WM_E_EMP_DTL.WM_DEPT_ID, WM_E_EMP_DTL.WM_SHIFT_ID, WM_E_EMP_DTL.WM_ROLE_ID, WM_E_EMP_DTL.USER_DEF_FIELD_1, WM_E_EMP_DTL.USER_DEF_FIELD_2, WM_E_EMP_DTL.WM_COMMENT, WM_E_EMP_DTL.WM_CREATE_TSTMP, WM_E_EMP_DTL.WM_MOD_TSTMP, WM_E_EMP_DTL.WM_USER_ID, WM_E_EMP_DTL.WM_WHSE, WM_E_EMP_DTL.LOCATION_ID, WM_E_EMP_DTL.WM_JOB_FUNC_ID, WM_E_EMP_DTL.STARTUP_TIME, WM_E_EMP_DTL.CLEANUP_TIME, WM_E_EMP_DTL.MISC_TXT_1, WM_E_EMP_DTL.MISC_TXT_2, WM_E_EMP_DTL.MISC_NUM_1, WM_E_EMP_DTL.MISC_NUM_2, WM_E_EMP_DTL.DFLT_PERF_GOAL, WM_E_EMP_DTL.SUPERVISOR_FLAG, WM_E_EMP_DTL.EXCLUDE_AUTO_CICO_FLAG, RANK() OVER (PARTITION BY WM_E_EMP_DTL.WM_EMP_ID, WM_E_EMP_DTL.LOCATION_ID  ORDER BY WM_E_EMP_DTL.EFF_TSTMP DESC ) AS RANK_ID FROM ADMIN.WM_E_EMP_DTL WHERE (WM_E_EMP_DTL.EFF_TSTMP <= "TIMESTAMP"(DATE('now(0)'::"VARCHAR")))) A WHERE (A.RANK_ID = 1);

\echo
\echo *****  Creating view:  "WM_ASSOCIATE_IDENTITY_VW"

CREATE or replace VIEW  WM_ASSOCIATE_IDENTITY_VW
(
     LOCATION_ID,
     WM_LOGIN_USER_ID,
     TAX_ID_NBR,
     WM_EMP_STAT_DESC,
     WM_EMP_STAT_CODE,
     WM_DEPT_CD,
     WM_JOB_FUNCTION_NAME,
     WM_JOB_FUNCTION_ID,
     WM_SHIFT_CD,
     EFF_TSTMP,
     SUPERVISOR_FLAG,
     WM_WHSE,
     WM_EMP_ID,
     WM_SHIFT_ID,
     WM_DEPT_ID,
     WM_EMP_STAT_ID,
     WM_JOB_FUNC_ID,
     WM_SUPERVISOR_EMP_ID,
     WM_EMPLOYEE_ID,
     WM_LAST_LOCN_ID,
     WM_LAST_TASK_ID,
     ADDR_1,
     BIRTH_DT,
     CITY,
     EMPLOYEE_START_DT,
     GENDER_ID,
     LAST_LOGIN_TSTMP,
     LAST_PASSWORD_CHANGE_TSTMP,
     NUMBER_OF_INVALID_LOGINS,
     PASSWORD_RESET_TSTMP,
     POSTAL_CD,
     STATE_PROV_CD,
     PHONE_NBR,
     USER_EMAIL_1,
     USER_FIRST_NAME,
     USER_LAST_NAME,
     USER_MIDDLE_NAME,
     USER_NAME,
     WM_UCL_USER_ID,
     SUPERVISOR_USER_NAME
) AS
SELECT UP.LOCATION_ID, UP.WM_LOGIN_USER_ID, UU.TAX_ID_NBR, ESC.WM_EMP_STAT_DESC, ESC.WM_EMP_STAT_CODE, D.WM_DEPT_CD, JF.WM_JOB_FUNCTION_NAME, JF.WM_JOB_FUNCTION_ID, S.WM_SHIFT_CD, ED.EFF_TSTMP, ED.SUPERVISOR_FLAG, ED.WM_WHSE, ED.WM_EMP_ID, ED.WM_SHIFT_ID, ED.WM_DEPT_ID, ED.WM_EMP_STAT_ID, ED.WM_JOB_FUNC_ID, ED.WM_SUPERVISOR_EMP_ID, UP.WM_EMPLOYEE_ID, UP.WM_LAST_LOCN_ID, UP.WM_LAST_TASK_ID, UU.ADDR_1, UU.BIRTH_DT, UU.CITY, UU.EMPLOYEE_START_DT, UU.GENDER_ID, UU.LAST_LOGIN_TSTMP, UU.LAST_PASSWORD_CHANGE_TSTMP, UU.NUMBER_OF_INVALID_LOGINS, UU.PASSWORD_RESET_TSTMP, UU.POSTAL_CD, UU.STATE_PROV_CD, UU.PHONE_NBR, UU.USER_EMAIL_1, UU.USER_FIRST_NAME, UU.USER_LAST_NAME, UU.USER_MIDDLE_NAME, UU.USER_NAME, UU.WM_UCL_USER_ID, UU2.USER_NAME AS SUPERVISOR_USER_NAME FROM (((((((ADMIN.WM_USER_PROFILE UP LEFT JOIN ADMIN.WM_UCL_USER UU ON (((UP.WM_LOGIN_USER_ID = UU.USER_NAME) AND (UP.LOCATION_ID = UU.LOCATION_ID)))) LEFT JOIN ADMIN.WM_LATEST_EMP_DTL_VW ED ON (((UU.WM_UCL_USER_ID = ED.WM_EMP_ID) AND (UU.LOCATION_ID = ED.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_SHIFT S ON (((ED.WM_SHIFT_ID = S.WM_SHIFT_ID) AND (ED.LOCATION_ID = S.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_DEPT D ON (((ED.WM_DEPT_ID = D.WM_DEPT_ID) AND (ED.LOCATION_ID = D.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_EMP_STAT_CODE ESC ON (((ED.WM_EMP_STAT_ID = ESC.WM_EMP_STAT_ID) AND (ED.LOCATION_ID = ESC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_E_JOB_FUNCTION JF ON (((ED.WM_JOB_FUNC_ID = JF.WM_JOB_FUNCTION_ID) AND (ED.LOCATION_ID = JF.LOCATION_ID)))) LEFT JOIN ADMIN.WM_UCL_USER_VW UU2 ON (((ED.WM_SUPERVISOR_EMP_ID = UU2.WM_UCL_USER_ID) AND (ED.LOCATION_ID = UU2.LOCATION_ID)))) WHERE ((((CASE WHEN (UU.WM_USER_TYPE_ID NOTNULL) THEN UU.WM_USER_TYPE_ID WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END <> '12'::NUMERIC(2,0)) AND (CASE WHEN (S.DELETE_FLAG NOTNULL) THEN S.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (CASE WHEN (ESC.DELETE_FLAG NOTNULL) THEN ESC.DELETE_FLAG WHEN (0 NOTNULL) THEN '0'::NUMERIC ELSE NULL::"NUMERIC" END = '0'::NUMERIC)) AND (UP.WM_LOGIN_USER_ID !~~ LIKE_ESCAPE('system%'::"VARCHAR", '\'::"VARCHAR")));

\echo
\echo *****  Creating view:  "WM_ITEM_IDENTITY_VW"

CREATE or replace VIEW  WM_ITEM_IDENTITY_VW
(
     LOCATION_ID,
     WM_ITEM_ID,
     PRODUCT_ID,
     CUBISCAN_LAST_UPDATED_TSTMP,
     WM_PRODUCT_CLASS_ID,
     REF_FIELD_1,
     REF_FIELD_2,
     REF_FIELD_3,
     REF_FIELD_4,
     REF_FIELD_5,
     REF_FIELD_6,
     REF_FIELD_7,
     REF_FIELD_8,
     REF_FIELD_9,
     REF_FIELD_10,
     REF_NUM_1,
     REF_NUM_2,
     REF_NUM_3,
     REF_NUM_4,
     REF_NUM_5,
     ACTIVATION_DT,
     WM_CARTON_TYPE,
     CC_UNIT_TOLER_VALUE,
     CD_DT_PROMPT_METHOD_FLAG,
     WM_COMMODITY_CD_SHORT_DESC,
     COMMODITY_LEVEL_DESC,
     CONS_PRTY_DATE_CODE,
     CONS_PRTY_DATE_WINDOW,
     CONS_PRTY_DATE_WINDOW_INCR,
     CONVEY_FLAG,
     CREATE_DATE_TIME,
     CUBE_MULT_QTY,
     DSP_QTY_UOM,
     WM_ITEM_NAME,
     MARKS_NBRS,
     MAX_CASE_QTY,
     MAX_RECV_TO_XPIRE_DAYS,
     MIN_LPN_QTY_FOR_SPLIT,
     MIN_PCNT_FOR_LPN_SPLIT,
     MIN_RECV_TO_XPIRE_DAYS,
     NEST_CNT,
     NEST_VOL,
     PKG_TYPE,
     PROD_GROUP,
     PROD_SUB_GRP,
     WM_PROD_TYPE,
     PROMPT_PACK_QTY_FLAG,
     ITEM_BAR_CD,
     WM_ITEM_DESC,
     SPL_INSTR_1,
     SPL_INSTR_2,
     STAT_CODE,
     STD_BUNDL_QTY,
     STD_CASE_HT,
     STD_CASE_LEN,
     STD_CASE_QTY,
     STD_CASE_VOL,
     STD_CASE_WIDTH,
     STD_CASE_WT,
     STD_PACK_HT,
     STD_PACK_LEN,
     STD_PACK_QTY,
     STD_PACK_VOL,
     STD_PACK_WIDTH,
     STD_PACK_WT,
     STD_PLT_QTY,
     STD_SUB_PACK_HT,
     STD_SUB_PACK_LEN,
     STD_SUB_PACK_QTY,
     STD_SUB_PACK_VOL,
     STD_SUB_PACK_WIDTH,
     STD_SUB_PACK_WT,
     STD_TIER_QTY,
     UNIT_HT,
     UNIT_LEN,
     WM_UNIT_PRICE,
     UNIT_VOL,
     UNIT_WIDTH,
     UNIT_WT,
     UNITS_PER_PICK_ACTIVE,
     UNITS_PER_PICK_CASE_PICK,
     UNITS_PER_PICK_RESV,
     UPC_PRE_DIGIT,
     VOLTY_CODE,
     XPIRE_DATE_REQD_FLAG,
     WM_ALLOC_TYPE,
     WM_ASSIGN_DYNAMIC_ACTV_PICK_SITE_FLAG,
     WM_ASSIGN_DYNAMIC_CASE_PICK_SITE_FLAG,
     WM_AUDIT_CREATED_TSTMP,
     WM_AUDIT_CREATED_SOURCE,
     WM_AUDIT_LAST_UPDATED_TSTMP,
     WM_AUDIT_LAST_UPDATED_SOURCE,
     WM_AUTO_SUB_CASE,
     WM_CARTON_BREAK_ATTR,
     WM_CASE_SIZE_TYPE,
     WM_FACILITY_ID,
     WM_LPN_PER_TIER,
     WM_MAX_CASES_IN_DYNAMIC_ACTV,
     WM_MAX_CASES_IN_DYNAMIC_CASE_PICK,
     WM_MAX_UNITS_IN_DYNAMIC_ACTV,
     WM_MAX_UNITS_IN_DYNAMIC_CASE_PICK,
     MISC_ALPHA_1,
     MISC_ALPHA_2,
     MISC_ALPHA_3,
     MISC_NUM_1,
     MISC_NUM_2,
     MISC_NUM_3,
     MISC_SHORT_ALPHA_1,
     MISC_SHORT_ALPHA_2,
     WM_NBR_OF_DYN_ACTV_PICK_PER_ITEM,
     WM_NBR_OF_DYN_CASE_PICK_PER_ITEM,
     WM_PICK_LOCN_ASSIGN_TYPE,
     WM_PRTL_CASE_ALLOC_THRESH_UNITS,
     WM_PRTL_CASE_PUTWY_THRESH_UNITS,
     WM_PUTWY_TYPE,
     WM_QUAL_INSPCT_ITEM_GRP,
     SLOT_MISC_1,
     SLOT_MISC_2,
     SLOT_MISC_3,
     SLOT_MISC_4,
     SLOT_MISC_5,
     SLOT_MISC_6,
     WM_SLOT_NEST_EACHES_FLAG,
     WM_TIER_PER_PLT,
     WM_VENDOR_MASTER_ID,
     WM_PRODUCT_CLASS_DESC,
     WM_PRODUCT_CLASS
) AS
SELECT IM.LOCATION_ID, IM.WM_ITEM_ID, S.PRODUCT_ID, IC.CUBISCAN_LAST_UPDATED_TSTMP, IC.WM_PRODUCT_CLASS_ID, IC.REF_FIELD_1, IC.REF_FIELD_2, IC.REF_FIELD_3, IC.REF_FIELD_4, IC.REF_FIELD_5, IC.REF_FIELD_6, IC.REF_FIELD_7, IC.REF_FIELD_8, IC.REF_FIELD_9, IC.REF_FIELD_10, IC.REF_NUM_1, IC.REF_NUM_2, IC.REF_NUM_3, IC.REF_NUM_4, IC.REF_NUM_5, IM.ACTIVATION_DT, IM.WM_CARTON_TYPE, IM.CC_UNIT_TOLER_VALUE, IM.CD_DT_PROMPT_METHOD_FLAG, IM.WM_COMMODITY_CD_SHORT_DESC, IM.COMMODITY_LEVEL_DESC, IM.CONS_PRTY_DATE_CODE, IM.CONS_PRTY_DATE_WINDOW, IM.CONS_PRTY_DATE_WINDOW_INCR, IM.CONVEY_FLAG, IM.CREATE_DATE_TIME, IM.CUBE_MULT_QTY, IM.DSP_QTY_UOM, IM.WM_ITEM_NAME, IM.MARKS_NBRS, IM.MAX_CASE_QTY, IM.MAX_RECV_TO_XPIRE_DAYS, IM.MIN_LPN_QTY_FOR_SPLIT, IM.MIN_PCNT_FOR_LPN_SPLIT, IM.MIN_RECV_TO_XPIRE_DAYS, IM.NEST_CNT, IM.NEST_VOL, IM.PKG_TYPE, IM.WM_PRODUCT_CLASS AS PROD_GROUP, IM.PROD_SUB_GRP, IM.WM_PROD_TYPE, IM.PROMPT_PACK_QTY_FLAG, IM.ITEM_BAR_CD, IM.WM_ITEM_DESC, IM.SPL_INSTR_1, IM.SPL_INSTR_2, IM.STAT_CODE, IM.STD_BUNDL_QTY, IM.STD_CASE_HT, IM.STD_CASE_LEN, IM.STD_CASE_QTY, IM.STD_CASE_VOL, IM.STD_CASE_WIDTH, IM.STD_CASE_WT, IM.STD_PACK_HT, IM.STD_PACK_LEN, IM.STD_PACK_QTY, IM.STD_PACK_VOL, IM.STD_PACK_WIDTH, IM.STD_PACK_WT, IM.STD_PLT_QTY, IM.STD_SUB_PACK_HT, IM.STD_SUB_PACK_LEN, IM.STD_SUB_PACK_QTY, IM.STD_SUB_PACK_VOL, IM.STD_SUB_PACK_WIDTH, IM.STD_SUB_PACK_WT, IM.STD_TIER_QTY, IM.UNIT_HT, IM.UNIT_LEN, IM.WM_UNIT_PRICE, IM.UNIT_VOL, IM.UNIT_WIDTH, IM.UNIT_WT, IM.UNITS_PER_PICK_ACTIVE, IM.UNITS_PER_PICK_CASE_PICK, IM.UNITS_PER_PICK_RESV, IM.UPC_PRE_DIGIT, IM.VOLTY_CODE, IM.XPIRE_DATE_REQD_FLAG, IFM.WM_ALLOC_TYPE, IFM.WM_ASSIGN_DYNAMIC_ACTV_PICK_SITE_FLAG, IFM.WM_ASSIGN_DYNAMIC_CASE_PICK_SITE_FLAG, IFM.WM_AUDIT_CREATED_TSTMP, IFM.WM_AUDIT_CREATED_SOURCE, IFM.WM_AUDIT_LAST_UPDATED_TSTMP, IFM.WM_AUDIT_LAST_UPDATED_SOURCE, IFM.WM_AUTO_SUB_CASE, IFM.WM_CARTON_BREAK_ATTR, IFM.WM_CASE_SIZE_TYPE, IFM.WM_FACILITY_ID, IFM.WM_LPN_PER_TIER, IFM.WM_MAX_CASES_IN_DYNAMIC_ACTV, IFM.WM_MAX_CASES_IN_DYNAMIC_CASE_PICK, IFM.WM_MAX_UNITS_IN_DYNAMIC_ACTV, IFM.WM_MAX_UNITS_IN_DYNAMIC_CASE_PICK, IFM.MISC_ALPHA_1, IFM.MISC_ALPHA_2, IFM.MISC_ALPHA_3, IFM.MISC_NUM_1, IFM.MISC_NUM_2, IFM.MISC_NUM_3, IFM.MISC_SHORT_ALPHA_1, IFM.MISC_SHORT_ALPHA_2, IFM.WM_NBR_OF_DYN_ACTV_PICK_PER_ITEM, IFM.WM_NBR_OF_DYN_CASE_PICK_PER_ITEM, IFM.WM_PICK_LOCN_ASSIGN_TYPE, IFM.WM_PRTL_CASE_ALLOC_THRESH_UNITS, IFM.WM_PRTL_CASE_PUTWY_THRESH_UNITS, IFM.WM_PUTWY_TYPE, IFM.WM_QUAL_INSPCT_ITEM_GRP, IFM.SLOT_MISC_1, IFM.SLOT_MISC_2, IFM.SLOT_MISC_3, IFM.SLOT_MISC_4, IFM.SLOT_MISC_5, IFM.SLOT_MISC_6, IFM.WM_SLOT_NEST_EACHES_FLAG, IFM.WM_TIER_PER_PLT, IW.WM_VENDOR_MASTER_ID, PC.WM_PRODUCT_CLASS_DESC, PC.WM_PRODUCT_CLASS FROM (((((ADMIN.WM_ITEM_MASTER_VW IM JOIN EDW_PRD.ADMIN.SKU_PROFILE S ON ((INT4(IM.WM_ITEM_NAME) = S.SKU_NBR))) LEFT JOIN ADMIN.WM_ITEM_FACILITY_MAPPING_WMS IFM ON (((IM.WM_ITEM_ID = IFM.WM_ITEM_ID) AND (IM.LOCATION_ID = IFM.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ITEM_WMS IW ON (((IM.WM_ITEM_ID = IW.WM_ITEM_ID) AND (IM.LOCATION_ID = IW.LOCATION_ID)))) LEFT JOIN ADMIN.WM_ITEM_CBO IC ON (((IM.WM_ITEM_ID = IC.WM_ITEM_ID) AND (IM.LOCATION_ID = IC.LOCATION_ID)))) LEFT JOIN ADMIN.WM_PRODUCT_CLASS PC ON (((IC.WM_PRODUCT_CLASS_ID = PC.WM_PRODUCT_CLASS_ID) AND (IC.LOCATION_ID = PC.LOCATION_ID))));

\echo
\echo *****  Creating view:  "PM_VWULHSIYDC6HPTGEAEJCGMZSOEA"

CREATE or replace VIEW  PM_VWULHSIYDC6HPTGEAEJCGMZSOEA
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (((1 = 0) AND (SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14)))) AND (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC));

\echo
\echo *****  Creating view:  "PM_VA6KPAYEVH5DYBKASC4BGYYPQKY"

CREATE or replace VIEW  PM_VA6KPAYEVH5DYBKASC4BGYYPQKY
(
     LOCATION_ID,
     WM_LPN_LOCK_ID,
     WM_LPN_ID,
     WM_TC_LPN_ID,
     WM_INVENTORY_LOCK_CD,
     WM_REASON_CD,
     LOCK_CNT,
     WM_CREATED_SOURCE_TYPE,
     WM_CREATED_SOURCE,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_SOURCE_TYPE,
     WM_LAST_UPDATED_SOURCE,
     WM_LAST_UPDATED_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_LPN_LOCK2.LOCATION_ID, SHORTCUT_TO_WM_LPN_LOCK2.WM_LPN_LOCK_ID, SHORTCUT_TO_WM_LPN_LOCK2.WM_LPN_ID, SHORTCUT_TO_WM_LPN_LOCK2.WM_TC_LPN_ID, SHORTCUT_TO_WM_LPN_LOCK2.WM_INVENTORY_LOCK_CD, SHORTCUT_TO_WM_LPN_LOCK2.WM_REASON_CD, SHORTCUT_TO_WM_LPN_LOCK2.LOCK_CNT, SHORTCUT_TO_WM_LPN_LOCK2.WM_CREATED_SOURCE_TYPE, SHORTCUT_TO_WM_LPN_LOCK2.WM_CREATED_SOURCE, SHORTCUT_TO_WM_LPN_LOCK2.WM_CREATED_TSTMP, SHORTCUT_TO_WM_LPN_LOCK2.WM_LAST_UPDATED_SOURCE_TYPE, SHORTCUT_TO_WM_LPN_LOCK2.WM_LAST_UPDATED_SOURCE, SHORTCUT_TO_WM_LPN_LOCK2.WM_LAST_UPDATED_TSTMP, SHORTCUT_TO_WM_LPN_LOCK2.DELETE_FLAG, SHORTCUT_TO_WM_LPN_LOCK2.UPDATE_TSTMP, SHORTCUT_TO_WM_LPN_LOCK2.LOAD_TSTMP FROM ADMIN.WM_LPN_LOCK SHORTCUT_TO_WM_LPN_LOCK2 WHERE (((1 = 0) AND (SHORTCUT_TO_WM_LPN_LOCK2.WM_CREATED_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14)))) OR ((SHORTCUT_TO_WM_LPN_LOCK2.WM_LAST_UPDATED_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14))) AND (SHORTCUT_TO_WM_LPN_LOCK2.DELETE_FLAG = '0'::NUMERIC)));

\echo
\echo *****  Creating view:  "PM_VXB6RDTCTILGDISUFGTCUX3FNSI"

CREATE or replace VIEW  PM_VXB6RDTCTILGDISUFGTCUX3FNSI
(
     LOCATION_ID,
     WM_SHIFT_ID,
     WM_SHIFT_CD,
     WM_SHIFT_DESC,
     WM_WHSE,
     WM_SHIFT_EFF_DT,
     OT_FLAG,
     OT_PAY_FCT,
     WEEK_MIN_OT_HRS,
     SCHED_SHIFT,
     REPORT_SHIFT,
     ROT_SHIFT_FLAG,
     ROT_SHIFT_NUM_DAYS,
     ROT_SHIFT_START_TSTMP,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_USER_ID,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     WM_MOD_TSTMP,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_TSTMP,
     DELETE_FLAG,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_SHIFT.LOCATION_ID, SHORTCUT_TO_WM_E_SHIFT.WM_SHIFT_ID, SHORTCUT_TO_WM_E_SHIFT.WM_SHIFT_CD, SHORTCUT_TO_WM_E_SHIFT.WM_SHIFT_DESC, SHORTCUT_TO_WM_E_SHIFT.WM_WHSE, SHORTCUT_TO_WM_E_SHIFT.WM_SHIFT_EFF_DT, SHORTCUT_TO_WM_E_SHIFT.OT_FLAG, SHORTCUT_TO_WM_E_SHIFT.OT_PAY_FCT, SHORTCUT_TO_WM_E_SHIFT.WEEK_MIN_OT_HRS, SHORTCUT_TO_WM_E_SHIFT.SCHED_SHIFT, SHORTCUT_TO_WM_E_SHIFT.REPORT_SHIFT, SHORTCUT_TO_WM_E_SHIFT.ROT_SHIFT_FLAG, SHORTCUT_TO_WM_E_SHIFT.ROT_SHIFT_NUM_DAYS, SHORTCUT_TO_WM_E_SHIFT.ROT_SHIFT_START_TSTMP, SHORTCUT_TO_WM_E_SHIFT.MISC_TXT_1, SHORTCUT_TO_WM_E_SHIFT.MISC_TXT_2, SHORTCUT_TO_WM_E_SHIFT.MISC_NUM_1, SHORTCUT_TO_WM_E_SHIFT.MISC_NUM_2, SHORTCUT_TO_WM_E_SHIFT.WM_USER_ID, SHORTCUT_TO_WM_E_SHIFT.WM_VERSION_ID, SHORTCUT_TO_WM_E_SHIFT.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_SHIFT.WM_MOD_TSTMP, SHORTCUT_TO_WM_E_SHIFT.WM_CREATED_TSTMP, SHORTCUT_TO_WM_E_SHIFT.WM_LAST_UPDATED_TSTMP, SHORTCUT_TO_WM_E_SHIFT.DELETE_FLAG, SHORTCUT_TO_WM_E_SHIFT.LOAD_TSTMP FROM ADMIN.WM_E_SHIFT SHORTCUT_TO_WM_E_SHIFT WHERE (((SHORTCUT_TO_WM_E_SHIFT.WM_LAST_UPDATED_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14))) AND (SHORTCUT_TO_WM_E_SHIFT.DELETE_FLAG = '0'::NUMERIC)) OR (SHORTCUT_TO_WM_E_SHIFT.WM_CREATED_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14))) OR ((1 = 0) AND (SHORTCUT_TO_WM_E_SHIFT.WM_CREATE_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14)))) OR (SHORTCUT_TO_WM_E_SHIFT.WM_MOD_TSTMP >= "TIMESTAMP"((TO_DATE('1901-01-01 00:00:00'::"VARCHAR", 'YYYY/MM/DD HH24:MI:SS'::"VARCHAR") - 14))));

\echo
\echo *****  Creating view:  "PM_VLFTQNKJLKGSX4XS2M4VIIUN6OI"

CREATE or replace VIEW  PM_VLFTQNKJLKGSX4XS2M4VIIUN6OI
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "PM_VKXRZJK2OE42ODYQVDOQBODZS6Q"

CREATE or replace VIEW  PM_VKXRZJK2OE42ODYQVDOQBODZS6Q
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "PM_VKJJX4GIVQTL73G5FIP5BO523Q4"

CREATE or replace VIEW  PM_VKJJX4GIVQTL73G5FIP5BO523Q4
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "PM_V5XXN6Y4G5TTOFN3Z6QPSRQMA2I"

CREATE or replace VIEW  PM_V5XXN6Y4G5TTOFN3Z6QPSRQMA2I
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "PM_V7AOD5CXAFJZQPLZT3H7PLFUOLA"

CREATE or replace VIEW  PM_V7AOD5CXAFJZQPLZT3H7PLFUOLA
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "PM_VZMZI23KJVLJTXN47VSGI4UB2NM"

CREATE or replace VIEW  PM_VZMZI23KJVLJTXN47VSGI4UB2NM
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "PM_VXPBHHCC3NOJVAMVU6VNGK24GII"

CREATE or replace VIEW  PM_VXPBHHCC3NOJVAMVU6VNGK24GII
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT SHORTCUT_TO_WM_E_AUD_LOG.LOCATION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_AUD_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_WHSE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TRAN_NBR, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRITERIA, SHORTCUT_TO_WM_E_AUD_LOG.WM_SLOT_ATTR, SHORTCUT_TO_WM_E_AUD_LOG.WM_ACT_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_LPN, SHORTCUT_TO_WM_E_AUD_LOG.WM_COMPONENT_BK, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELM_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_FACTOR, SHORTCUT_TO_WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, SHORTCUT_TO_WM_E_AUD_LOG.WM_MODULE_TYPE, SHORTCUT_TO_WM_E_AUD_LOG.WM_TA_MULTIPLIER, SHORTCUT_TO_WM_E_AUD_LOG.WM_ELS_TRAN_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_VAL, SHORTCUT_TO_WM_E_AUD_LOG.WM_CRIT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_SLOT, SHORTCUT_TO_WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, SHORTCUT_TO_WM_E_AUD_LOG.PFD_TIME, SHORTCUT_TO_WM_E_AUD_LOG.FACTOR_TIME, SHORTCUT_TO_WM_E_AUD_LOG.DISTANCE, SHORTCUT_TO_WM_E_AUD_LOG.HEIGHT, SHORTCUT_TO_WM_E_AUD_LOG.TRVL_DIR, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_DESC, SHORTCUT_TO_WM_E_AUD_LOG.ELEM_TIME, SHORTCUT_TO_WM_E_AUD_LOG.UOM, SHORTCUT_TO_WM_E_AUD_LOG.TOT_TIME, SHORTCUT_TO_WM_E_AUD_LOG.TOT_UNITS, SHORTCUT_TO_WM_E_AUD_LOG.UNITS_PER_GRAB, SHORTCUT_TO_WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.ADDTL_TIME_ALLOW, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_TXT_2, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_1, SHORTCUT_TO_WM_E_AUD_LOG.MISC_NUM_2, SHORTCUT_TO_WM_E_AUD_LOG.WM_VERSION_ID, SHORTCUT_TO_WM_E_AUD_LOG.WM_CREATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG, SHORTCUT_TO_WM_E_AUD_LOG.UPDATE_TSTMP, SHORTCUT_TO_WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG SHORTCUT_TO_WM_E_AUD_LOG WHERE (SHORTCUT_TO_WM_E_AUD_LOG.DELETE_FLAG = '0'::NUMERIC);

\echo
\echo *****  Creating view:  "WM_E_AUD_LOG_ROCKY"

CREATE or replace VIEW  WM_E_AUD_LOG_ROCKY
(
     LOCATION_ID,
     WM_AUD_ID,
     WM_WHSE,
     WM_TRAN_NBR,
     WM_SKU_ID,
     WM_SKU_HNDL_ATTR,
     WM_CRITERIA,
     WM_SLOT_ATTR,
     WM_ACT_ID,
     WM_LPN,
     WM_COMPONENT_BK,
     WM_ELM_ID,
     WM_FACTOR,
     WM_THRUPUT_MSRMNT,
     WM_MODULE_TYPE,
     WM_TA_MULTIPLIER,
     WM_ELS_TRAN_ID,
     WM_CRIT_VAL,
     WM_CRIT_TIME,
     WM_CURR_SLOT,
     WM_NEXT_SLOT,
     WM_CURR_LOCN_CLASS,
     WM_NEXT_LOCN_CLASS,
     PFD_TIME,
     FACTOR_TIME,
     DISTANCE,
     HEIGHT,
     TRVL_DIR,
     ELEM_DESC,
     ELEM_TIME,
     UOM,
     TOT_TIME,
     TOT_UNITS,
     UNITS_PER_GRAB,
     UNIT_PICK_TIME_ALLOW,
     SLOT_TYPE_TIME_ALLOW,
     ADDTL_TIME_ALLOW,
     MISC_TXT_1,
     MISC_TXT_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_VERSION_ID,
     WM_CREATE_TSTMP,
     DELETE_FLAG,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT WM_E_AUD_LOG.LOCATION_ID, WM_E_AUD_LOG.WM_AUD_ID, WM_E_AUD_LOG.WM_WHSE, WM_E_AUD_LOG.WM_TRAN_NBR, WM_E_AUD_LOG.WM_SKU_ID, WM_E_AUD_LOG.WM_SKU_HNDL_ATTR, WM_E_AUD_LOG.WM_CRITERIA, WM_E_AUD_LOG.WM_SLOT_ATTR, WM_E_AUD_LOG.WM_ACT_ID, WM_E_AUD_LOG.WM_LPN, WM_E_AUD_LOG.WM_COMPONENT_BK, WM_E_AUD_LOG.WM_ELM_ID, WM_E_AUD_LOG.WM_FACTOR, WM_E_AUD_LOG.WM_THRUPUT_MSRMNT, WM_E_AUD_LOG.WM_MODULE_TYPE, WM_E_AUD_LOG.WM_TA_MULTIPLIER, WM_E_AUD_LOG.WM_ELS_TRAN_ID, WM_E_AUD_LOG.WM_CRIT_VAL, WM_E_AUD_LOG.WM_CRIT_TIME, WM_E_AUD_LOG.WM_CURR_SLOT, WM_E_AUD_LOG.WM_NEXT_SLOT, WM_E_AUD_LOG.WM_CURR_LOCN_CLASS, WM_E_AUD_LOG.WM_NEXT_LOCN_CLASS, WM_E_AUD_LOG.PFD_TIME, WM_E_AUD_LOG.FACTOR_TIME, WM_E_AUD_LOG.DISTANCE, WM_E_AUD_LOG.HEIGHT, WM_E_AUD_LOG.TRVL_DIR, WM_E_AUD_LOG.ELEM_DESC, WM_E_AUD_LOG.ELEM_TIME, WM_E_AUD_LOG.UOM, WM_E_AUD_LOG.TOT_TIME, WM_E_AUD_LOG.TOT_UNITS, WM_E_AUD_LOG.UNITS_PER_GRAB, WM_E_AUD_LOG.UNIT_PICK_TIME_ALLOW, WM_E_AUD_LOG.SLOT_TYPE_TIME_ALLOW, WM_E_AUD_LOG.ADDTL_TIME_ALLOW, WM_E_AUD_LOG.MISC_TXT_1, WM_E_AUD_LOG.MISC_TXT_2, WM_E_AUD_LOG.MISC_NUM_1, WM_E_AUD_LOG.MISC_NUM_2, WM_E_AUD_LOG.WM_VERSION_ID, WM_E_AUD_LOG.WM_CREATE_TSTMP, WM_E_AUD_LOG.DELETE_FLAG, WM_E_AUD_LOG.UPDATE_TSTMP, WM_E_AUD_LOG.LOAD_TSTMP FROM ADMIN.WM_E_AUD_LOG WHERE (DATE(WM_E_AUD_LOG.UPDATE_TSTMP) = ANY (SELECT EDW_PRD.ADMIN.DAYS.DAY_DT FROM EDW_PRD.ADMIN.DAYS WHERE (EDW_PRD.ADMIN.DAYS.FISCAL_QTR > 202203)));

\echo
\echo *****  Creating view:  "WM_LABOR_MSG_DTL_ROCKY"

CREATE or replace VIEW  WM_LABOR_MSG_DTL_ROCKY
(
     LOCATION_ID,
     WM_LABOR_MSG_DTL_ID,
     WM_LABOR_MSG_ID,
     WM_TRAN_NBR,
     WM_TRAN_SEQ_NBR,
     WM_MSG_STAT_CD,
     SEQ_NBR,
     WM_COMPANY,
     WM_DIVISION,
     WM_START_TSTMP,
     WM_TC_ILPN_ID,
     WM_TC_OLPN_ID,
     WM_PUTAWAY_ZONE,
     WM_PICK_DETERMINATION_ZONE,
     WM_WORK_GROUP,
     WM_WORK_AREA,
     WM_PULL_ZONE,
     WM_ASSIGNMENT_ZONE,
     WM_RESOURCE_GROUP_ID,
     LOADED_FLAG,
     WM_ITEM_BAR_CD,
     WM_ITEM_NAME,
     SEC_DIM,
     WEIGHT,
     VOLUME,
     SEASON,
     SEASON_YR,
     STYLE,
     STYLE_SFX,
     COLOR,
     COLOR_SFX,
     WM_PALLET_ID,
     WM_SIZE_RANGE_CD,
     SIZE_REL_POSN_IN_TABLE,
     WM_LOCN_SLOT_TYPE,
     WM_LOCN_CLASS,
     WM_LOCN_GRP_ATTR,
     DSP_LOCN,
     LOCN_X_COORD,
     LOCN_Y_COORD,
     LOCN_Z_COORD,
     LOCN_TRAV_AISLE,
     LOCN_TRAV_ZONE,
     WM_HANDLING_ATTR,
     WM_HANDLING_UOM,
     QUAL,
     QTY_PER_GRAB,
     QTY,
     BOX_QTY,
     INNERPACK_QTY,
     PACK_QTY,
     CASE_QTY,
     TIER_QTY,
     PALLET_QTY,
     CRIT_DIM1,
     CRIT_DIM2,
     CRIT_DIM3,
     MISC,
     MISC_2,
     MISC_NUM_1,
     MISC_NUM_2,
     WM_HIBERNATE_VERSION,
     WM_CREATED_SOURCE_TYPE,
     WM_CREATED_SOURCE,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_SOURCE_TYPE,
     WM_LAST_UPDATED_SOURCE,
     WM_LAST_UPDATED_TSTMP,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT WM_LABOR_MSG_DTL.LOCATION_ID, WM_LABOR_MSG_DTL.WM_LABOR_MSG_DTL_ID, WM_LABOR_MSG_DTL.WM_LABOR_MSG_ID, WM_LABOR_MSG_DTL.WM_TRAN_NBR, WM_LABOR_MSG_DTL.WM_TRAN_SEQ_NBR, WM_LABOR_MSG_DTL.WM_MSG_STAT_CD, WM_LABOR_MSG_DTL.SEQ_NBR, WM_LABOR_MSG_DTL.WM_COMPANY, WM_LABOR_MSG_DTL.WM_DIVISION, WM_LABOR_MSG_DTL.WM_START_TSTMP, WM_LABOR_MSG_DTL.WM_TC_ILPN_ID, WM_LABOR_MSG_DTL.WM_TC_OLPN_ID, WM_LABOR_MSG_DTL.WM_PUTAWAY_ZONE, WM_LABOR_MSG_DTL.WM_PICK_DETERMINATION_ZONE, WM_LABOR_MSG_DTL.WM_WORK_GROUP, WM_LABOR_MSG_DTL.WM_WORK_AREA, WM_LABOR_MSG_DTL.WM_PULL_ZONE, WM_LABOR_MSG_DTL.WM_ASSIGNMENT_ZONE, WM_LABOR_MSG_DTL.WM_RESOURCE_GROUP_ID, WM_LABOR_MSG_DTL.LOADED_FLAG, WM_LABOR_MSG_DTL.WM_ITEM_BAR_CD, WM_LABOR_MSG_DTL.WM_ITEM_NAME, WM_LABOR_MSG_DTL.SEC_DIM, WM_LABOR_MSG_DTL.WEIGHT, WM_LABOR_MSG_DTL.VOLUME, WM_LABOR_MSG_DTL.SEASON, WM_LABOR_MSG_DTL.SEASON_YR, WM_LABOR_MSG_DTL."STYLE", WM_LABOR_MSG_DTL.STYLE_SFX, WM_LABOR_MSG_DTL.COLOR, WM_LABOR_MSG_DTL.COLOR_SFX, WM_LABOR_MSG_DTL.WM_PALLET_ID, WM_LABOR_MSG_DTL.WM_SIZE_RANGE_CD, WM_LABOR_MSG_DTL.SIZE_REL_POSN_IN_TABLE, WM_LABOR_MSG_DTL.WM_LOCN_SLOT_TYPE, WM_LABOR_MSG_DTL.WM_LOCN_CLASS, WM_LABOR_MSG_DTL.WM_LOCN_GRP_ATTR, WM_LABOR_MSG_DTL.DSP_LOCN, WM_LABOR_MSG_DTL.LOCN_X_COORD, WM_LABOR_MSG_DTL.LOCN_Y_COORD, WM_LABOR_MSG_DTL.LOCN_Z_COORD, WM_LABOR_MSG_DTL.LOCN_TRAV_AISLE, WM_LABOR_MSG_DTL.LOCN_TRAV_ZONE, WM_LABOR_MSG_DTL.WM_HANDLING_ATTR, WM_LABOR_MSG_DTL.WM_HANDLING_UOM, WM_LABOR_MSG_DTL.QUAL, WM_LABOR_MSG_DTL.QTY_PER_GRAB, WM_LABOR_MSG_DTL.QTY, WM_LABOR_MSG_DTL.BOX_QTY, WM_LABOR_MSG_DTL.INNERPACK_QTY, WM_LABOR_MSG_DTL.PACK_QTY, WM_LABOR_MSG_DTL.CASE_QTY, WM_LABOR_MSG_DTL.TIER_QTY, WM_LABOR_MSG_DTL.PALLET_QTY, WM_LABOR_MSG_DTL.CRIT_DIM1, WM_LABOR_MSG_DTL.CRIT_DIM2, WM_LABOR_MSG_DTL.CRIT_DIM3, WM_LABOR_MSG_DTL.MISC, WM_LABOR_MSG_DTL.MISC_2, WM_LABOR_MSG_DTL.MISC_NUM_1, WM_LABOR_MSG_DTL.MISC_NUM_2, WM_LABOR_MSG_DTL.WM_HIBERNATE_VERSION, WM_LABOR_MSG_DTL.WM_CREATED_SOURCE_TYPE, WM_LABOR_MSG_DTL.WM_CREATED_SOURCE, WM_LABOR_MSG_DTL.WM_CREATED_TSTMP, WM_LABOR_MSG_DTL.WM_LAST_UPDATED_SOURCE_TYPE, WM_LABOR_MSG_DTL.WM_LAST_UPDATED_SOURCE, WM_LABOR_MSG_DTL.WM_LAST_UPDATED_TSTMP, WM_LABOR_MSG_DTL.UPDATE_TSTMP, WM_LABOR_MSG_DTL.LOAD_TSTMP FROM ADMIN.WM_LABOR_MSG_DTL WHERE (DATE(WM_LABOR_MSG_DTL.UPDATE_TSTMP) = ANY (SELECT EDW_PRD.ADMIN.DAYS.DAY_DT FROM EDW_PRD.ADMIN.DAYS WHERE (EDW_PRD.ADMIN.DAYS.FISCAL_QTR > 202203)));

\echo
\echo *****  Creating view:  "WM_ORDER_LINE_ITEM_ROCKY"

CREATE or replace VIEW  WM_ORDER_LINE_ITEM_ROCKY
(
     LOCATION_ID,
     WM_ORDER_ID,
     WM_LINE_ITEM_ID,
     WM_DESC,
     WM_MASTER_ORDER_ID,
     WM_MO_LINE_ITEM_ID,
     WM_ORDER_LINE_ID,
     WM_PARENT_LINE_ITEM_ID,
     WM_ITEM_ID,
     WM_ITEM_NAME,
     WM_ORIGINAL_ORDERED_ITEM_ID,
     WM_TC_COMPANY_ID,
     WM_TC_ORDER_LINE_ID,
     WM_MINOR_ORDER_NBR,
     WM_INTERNAL_ORDER_ID,
     WM_INTERNAL_ORDER_SEQ_NBR,
     WM_REF_ORDER_ID,
     WM_REF_LINE_ITEM_ID,
     WM_PURCHASE_ORDER_NBR,
     WM_PURCHASE_ORDER_LINE_NBR,
     WM_EXT_PURCHASE_ORDER,
     WM_EXT_SYS_LINE_ITEM_ID,
     WM_MERCHANDIZING_DEPT_ID,
     WM_UN_NBR_ID,
     WM_PICKUP_REF_NBR,
     WM_DELIVERY_REF_NBR,
     WM_RTS_ID,
     WM_RTS_LINE_ITEM_ID,
     WM_PROTECTION_LEVEL_ID,
     WM_PACKAGE_TYPE_ID,
     WM_COMMODITY_CD_ID,
     WM_EVENT_CD,
     WM_WAVE_NBR,
     WM_SHIP_WAVE_NBR,
     WM_REPL_WAVE_NBR,
     WM_LPN_TYPE,
     WM_PRE_RECEIPT_STATUS,
     WM_DO_DTL_STATUS,
     WM_PROD_STAT,
     WM_HARD_ALLOC_REASON_CD,
     WM_REASON_CD,
     BACK_ORD_REASON,
     WM_EXP_INFO_CD,
     WM_WAVE_PROC_TYPE,
     LINE_TYPE,
     REPL_PROC_TYPE,
     REPL_WAVE_RUN_FLAG,
     WM_ALLOC_TYPE,
     WM_BATCH_NBR,
     WM_BATCH_REQUIREMENT_TYPE,
     WM_CHUTE_ASSIGN_TYPE,
     WM_INVN_TYPE,
     LPN_BRK_ATTR,
     PACK_ZONE,
     WM_PALLET_TYPE,
     WM_PICK_LOCN_ASSIGN_TYPE,
     WM_PICK_LOCN_ID,
     WM_PPACK_GRP_CD,
     WM_PRICE_TKT_TYPE,
     WM_SHELF_DAYS,
     WM_FULFILLMENT_TYPE,
     WM_ORDER_CONSOL_ATTR,
     VAS_PROCESS_TYPE,
     WM_SEGMENT_NAME,
     WM_EFFECTIVE_RANK,
     PRIORITY,
     ALLOW_REVIVAL_RECEIPT_ALLOC,
     RECEIPT_ALLOCATED_FLAG,
     HAZMAT_FLAG,
     STACKABLE_FLAG,
     HAS_ERRORS_FLAG,
     EMERGENCY_FLAG,
     SINGLE_UNIT_FLAG,
     SERIAL_NBR_REQD_FLAG,
     CHASE_CREATED_LINE_FLAG,
     GIFT_FLAG,
     PARTIAL_FILL_FLAG,
     LOCKED_FLAG,
     CANCELLED_FLAG,
     SKU_GTIN,
     COUNTRY_OF_ORIGIN,
     COMMODITY_CLASS,
     WM_PRODUCT_CLASS_ID,
     WM_STORE_DEPT,
     WM_MERCH_GRP,
     WM_MERCH_TYPE,
     CUSTOM_TAG,
     CUSTOMER_ITEM,
     WM_SKU_SUB_CD_ID,
     WM_SKU_SUB_CD_VALUE,
     WM_SUBSTITUTED_PARENT_LINE_ID,
     WM_ALLOCATION_SOURCE,
     WM_ALLOC_LINE_ID,
     WM_ALLOCATION_SOURCE_ID,
     WM_ALLOCATION_SOURCE_LINE_ID,
     SKU_BREAK_ATTR,
     WM_ASSORT_NBR,
     SUBSTITUTION_TYPE,
     MANUFACTURING_TSTMP,
     PICKUP_START_TSTMP,
     PICKUP_END_TSTMP,
     DELIVERY_START_TSTMP,
     DELIVERY_END_TSTMP,
     PLANNED_SHIP_TSTMP,
     ACTUAL_SHIPPED_TSTMP,
     PACK_RATE,
     PPACK_QTY,
     USER_CANCELED_QTY,
     ACTUAL_COST,
     ORIG_BUDG_COST,
     BUDG_COST,
     BUDG_COST_CURRENCY_CD,
     ACTUAL_COST_CURRENCY_CD,
     TOTAL_MONETARY_VALUE,
     PRICE,
     RETAIL_PRICE,
     GIFT_CARD_VALUE,
     UNIT_COST,
     UNIT_PRICE_AMT,
     UNIT_VOL,
     UNIT_WT,
     UNIT_TAX_AMT,
     UNIT_MONETARY_VALUE,
     MV_CURRENCY_CD,
     ORIG_ORDER_QTY,
     ORDER_QTY,
     ADJUSTED_ORDER_QTY,
     ALLOCATED_QTY,
     SHIPPED_QTY,
     RECEIVED_QTY,
     RTL_TO_BE_DISTROED_QTY,
     UNITS_PAKD,
     CUBE_MULTIPLE_QTY,
     STD_PACK_QTY,
     STD_PALLET_QTY,
     STD_SUB_PACK_QTY,
     STD_BUNDLE_QTY,
     STD_LPN_QTY,
     STD_LPN_VOL,
     STD_LPN_WT,
     LPN_SIZE,
     QTY_CONV_FACTOR,
     WM_QTY_UOM_ID,
     WM_QTY_UOM_ID_BASE,
     WM_MV_SIZE_UOM_ID,
     PLANNED_WEIGHT,
     RECEIVED_WEIGHT,
     SHIPPED_WEIGHT,
     WM_WEIGHT_UOM_ID_BASE,
     WM_WEIGHT_UOM_ID,
     PLANNED_VOLUME,
     RECEIVED_VOLUME,
     SHIPPED_VOLUME,
     WM_VOLUME_UOM_ID_BASE,
     WM_VOLUME_UOM_ID,
     SIZE_1_VALUE,
     RECEIVED_SIZE_1,
     SHIPPED_SIZE_1,
     WM_SIZE_1_UOM_ID,
     SIZE_2_VALUE,
     RECEIVED_SIZE_2,
     SHIPPED_SIZE_2,
     WM_SIZE_2_UOM_ID,
     STACK_RANK,
     STACK_LENGTH_VALUE,
     WM_STACK_LENGTH_STANDARD_UOM,
     STACK_WIDTH_VALUE,
     WM_STACK_WIDTH_STANDARD_UOM,
     STACK_HEIGHT_VALUE,
     WM_STACK_HEIGHT_STANDARD_UOM,
     STACK_DIAMETER_VALUE,
     WM_STACK_DIAMETER_STANDARD_UOM,
     FREIGHT_REVENUE,
     FREIGHT_REVENUE_CURRENCY_CD,
     ITEM_ATTR_1,
     ITEM_ATTR_2,
     ITEM_ATTR_3,
     ITEM_ATTR_4,
     ITEM_ATTR_5,
     CRITCL_DIM_1,
     CRITCL_DIM_2,
     CRITCL_DIM_3,
     REF_BOOLEAN_1,
     REF_BOOLEAN_2,
     REF_SYS_CD_1,
     REF_SYS_CD_2,
     REF_SYS_CD_3,
     REF_FIELD_1,
     REF_FIELD_2,
     REF_FIELD_3,
     REF_FIELD_4,
     REF_FIELD_5,
     REF_FIELD_6,
     REF_FIELD_7,
     REF_FIELD_8,
     REF_FIELD_9,
     REF_FIELD_10,
     REF_NUM_1,
     REF_NUM_2,
     REF_NUM_3,
     REF_NUM_4,
     REF_NUM_5,
     WM_HIBERNATE_VERSION,
     WM_CREATED_SOURCE_TYPE,
     WM_CREATED_SOURCE,
     WM_CREATED_TSTMP,
     WM_LAST_UPDATED_SOURCE_TYPE,
     WM_LAST_UPDATED_SOURCE,
     WM_LAST_UPDATED_TSTMP,
     UPDATE_TSTMP,
     LOAD_TSTMP
) AS
SELECT WM_ORDER_LINE_ITEM.LOCATION_ID, WM_ORDER_LINE_ITEM.WM_ORDER_ID, WM_ORDER_LINE_ITEM.WM_LINE_ITEM_ID, WM_ORDER_LINE_ITEM.WM_DESC, WM_ORDER_LINE_ITEM.WM_MASTER_ORDER_ID, WM_ORDER_LINE_ITEM.WM_MO_LINE_ITEM_ID, WM_ORDER_LINE_ITEM.WM_ORDER_LINE_ID, WM_ORDER_LINE_ITEM.WM_PARENT_LINE_ITEM_ID, WM_ORDER_LINE_ITEM.WM_ITEM_ID, WM_ORDER_LINE_ITEM.WM_ITEM_NAME, WM_ORDER_LINE_ITEM.WM_ORIGINAL_ORDERED_ITEM_ID, WM_ORDER_LINE_ITEM.WM_TC_COMPANY_ID, WM_ORDER_LINE_ITEM.WM_TC_ORDER_LINE_ID, WM_ORDER_LINE_ITEM.WM_MINOR_ORDER_NBR, WM_ORDER_LINE_ITEM.WM_INTERNAL_ORDER_ID, WM_ORDER_LINE_ITEM.WM_INTERNAL_ORDER_SEQ_NBR, WM_ORDER_LINE_ITEM.WM_REF_ORDER_ID, WM_ORDER_LINE_ITEM.WM_REF_LINE_ITEM_ID, WM_ORDER_LINE_ITEM.WM_PURCHASE_ORDER_NBR, WM_ORDER_LINE_ITEM.WM_PURCHASE_ORDER_LINE_NBR, WM_ORDER_LINE_ITEM.WM_EXT_PURCHASE_ORDER, WM_ORDER_LINE_ITEM.WM_EXT_SYS_LINE_ITEM_ID, WM_ORDER_LINE_ITEM.WM_MERCHANDIZING_DEPT_ID, WM_ORDER_LINE_ITEM.WM_UN_NBR_ID, WM_ORDER_LINE_ITEM.WM_PICKUP_REF_NBR, WM_ORDER_LINE_ITEM.WM_DELIVERY_REF_NBR, WM_ORDER_LINE_ITEM.WM_RTS_ID, WM_ORDER_LINE_ITEM.WM_RTS_LINE_ITEM_ID, WM_ORDER_LINE_ITEM.WM_PROTECTION_LEVEL_ID, WM_ORDER_LINE_ITEM.WM_PACKAGE_TYPE_ID, WM_ORDER_LINE_ITEM.WM_COMMODITY_CD_ID, WM_ORDER_LINE_ITEM.WM_EVENT_CD, WM_ORDER_LINE_ITEM.WM_WAVE_NBR, WM_ORDER_LINE_ITEM.WM_SHIP_WAVE_NBR, WM_ORDER_LINE_ITEM.WM_REPL_WAVE_NBR, WM_ORDER_LINE_ITEM.WM_LPN_TYPE, WM_ORDER_LINE_ITEM.WM_PRE_RECEIPT_STATUS, WM_ORDER_LINE_ITEM.WM_DO_DTL_STATUS, WM_ORDER_LINE_ITEM.WM_PROD_STAT, WM_ORDER_LINE_ITEM.WM_HARD_ALLOC_REASON_CD, WM_ORDER_LINE_ITEM.WM_REASON_CD, WM_ORDER_LINE_ITEM.BACK_ORD_REASON, WM_ORDER_LINE_ITEM.WM_EXP_INFO_CD, WM_ORDER_LINE_ITEM.WM_WAVE_PROC_TYPE, WM_ORDER_LINE_ITEM.LINE_TYPE, WM_ORDER_LINE_ITEM.REPL_PROC_TYPE, WM_ORDER_LINE_ITEM.REPL_WAVE_RUN_FLAG, WM_ORDER_LINE_ITEM.WM_ALLOC_TYPE, WM_ORDER_LINE_ITEM.WM_BATCH_NBR, WM_ORDER_LINE_ITEM.WM_BATCH_REQUIREMENT_TYPE, WM_ORDER_LINE_ITEM.WM_CHUTE_ASSIGN_TYPE, WM_ORDER_LINE_ITEM.WM_INVN_TYPE, WM_ORDER_LINE_ITEM.LPN_BRK_ATTR, WM_ORDER_LINE_ITEM.PACK_ZONE, WM_ORDER_LINE_ITEM.WM_PALLET_TYPE, WM_ORDER_LINE_ITEM.WM_PICK_LOCN_ASSIGN_TYPE, WM_ORDER_LINE_ITEM.WM_PICK_LOCN_ID, WM_ORDER_LINE_ITEM.WM_PPACK_GRP_CD, WM_ORDER_LINE_ITEM.WM_PRICE_TKT_TYPE, WM_ORDER_LINE_ITEM.WM_SHELF_DAYS, WM_ORDER_LINE_ITEM.WM_FULFILLMENT_TYPE, WM_ORDER_LINE_ITEM.WM_ORDER_CONSOL_ATTR, WM_ORDER_LINE_ITEM.VAS_PROCESS_TYPE, WM_ORDER_LINE_ITEM.WM_SEGMENT_NAME, WM_ORDER_LINE_ITEM.WM_EFFECTIVE_RANK, WM_ORDER_LINE_ITEM."PRIORITY", WM_ORDER_LINE_ITEM.ALLOW_REVIVAL_RECEIPT_ALLOC, WM_ORDER_LINE_ITEM.RECEIPT_ALLOCATED_FLAG, WM_ORDER_LINE_ITEM.HAZMAT_FLAG, WM_ORDER_LINE_ITEM.STACKABLE_FLAG, WM_ORDER_LINE_ITEM.HAS_ERRORS_FLAG, WM_ORDER_LINE_ITEM.EMERGENCY_FLAG, WM_ORDER_LINE_ITEM.SINGLE_UNIT_FLAG, WM_ORDER_LINE_ITEM.SERIAL_NBR_REQD_FLAG, WM_ORDER_LINE_ITEM.CHASE_CREATED_LINE_FLAG, WM_ORDER_LINE_ITEM.GIFT_FLAG, WM_ORDER_LINE_ITEM.PARTIAL_FILL_FLAG, WM_ORDER_LINE_ITEM.LOCKED_FLAG, WM_ORDER_LINE_ITEM.CANCELLED_FLAG, WM_ORDER_LINE_ITEM.SKU_GTIN, WM_ORDER_LINE_ITEM.COUNTRY_OF_ORIGIN, WM_ORDER_LINE_ITEM.COMMODITY_CLASS, WM_ORDER_LINE_ITEM.WM_PRODUCT_CLASS_ID, WM_ORDER_LINE_ITEM.WM_STORE_DEPT, WM_ORDER_LINE_ITEM.WM_MERCH_GRP, WM_ORDER_LINE_ITEM.WM_MERCH_TYPE, WM_ORDER_LINE_ITEM.CUSTOM_TAG, WM_ORDER_LINE_ITEM.CUSTOMER_ITEM, WM_ORDER_LINE_ITEM.WM_SKU_SUB_CD_ID, WM_ORDER_LINE_ITEM.WM_SKU_SUB_CD_VALUE, WM_ORDER_LINE_ITEM.WM_SUBSTITUTED_PARENT_LINE_ID, WM_ORDER_LINE_ITEM.WM_ALLOCATION_SOURCE, WM_ORDER_LINE_ITEM.WM_ALLOC_LINE_ID, WM_ORDER_LINE_ITEM.WM_ALLOCATION_SOURCE_ID, WM_ORDER_LINE_ITEM.WM_ALLOCATION_SOURCE_LINE_ID, WM_ORDER_LINE_ITEM.SKU_BREAK_ATTR, WM_ORDER_LINE_ITEM.WM_ASSORT_NBR, WM_ORDER_LINE_ITEM.SUBSTITUTION_TYPE, WM_ORDER_LINE_ITEM.MANUFACTURING_TSTMP, WM_ORDER_LINE_ITEM.PICKUP_START_TSTMP, WM_ORDER_LINE_ITEM.PICKUP_END_TSTMP, WM_ORDER_LINE_ITEM.DELIVERY_START_TSTMP, WM_ORDER_LINE_ITEM.DELIVERY_END_TSTMP, WM_ORDER_LINE_ITEM.PLANNED_SHIP_TSTMP, WM_ORDER_LINE_ITEM.ACTUAL_SHIPPED_TSTMP, WM_ORDER_LINE_ITEM.PACK_RATE, WM_ORDER_LINE_ITEM.PPACK_QTY, WM_ORDER_LINE_ITEM.USER_CANCELED_QTY, WM_ORDER_LINE_ITEM.ACTUAL_COST, WM_ORDER_LINE_ITEM.ORIG_BUDG_COST, WM_ORDER_LINE_ITEM.BUDG_COST, WM_ORDER_LINE_ITEM.BUDG_COST_CURRENCY_CD, WM_ORDER_LINE_ITEM.ACTUAL_COST_CURRENCY_CD, WM_ORDER_LINE_ITEM.TOTAL_MONETARY_VALUE, WM_ORDER_LINE_ITEM.PRICE, WM_ORDER_LINE_ITEM.RETAIL_PRICE, WM_ORDER_LINE_ITEM.GIFT_CARD_VALUE, WM_ORDER_LINE_ITEM.UNIT_COST, WM_ORDER_LINE_ITEM.UNIT_PRICE_AMT, WM_ORDER_LINE_ITEM.UNIT_VOL, WM_ORDER_LINE_ITEM.UNIT_WT, WM_ORDER_LINE_ITEM.UNIT_TAX_AMT, WM_ORDER_LINE_ITEM.UNIT_MONETARY_VALUE, WM_ORDER_LINE_ITEM.MV_CURRENCY_CD, WM_ORDER_LINE_ITEM.ORIG_ORDER_QTY, WM_ORDER_LINE_ITEM.ORDER_QTY, WM_ORDER_LINE_ITEM.ADJUSTED_ORDER_QTY, WM_ORDER_LINE_ITEM.ALLOCATED_QTY, WM_ORDER_LINE_ITEM.SHIPPED_QTY, WM_ORDER_LINE_ITEM.RECEIVED_QTY, WM_ORDER_LINE_ITEM.RTL_TO_BE_DISTROED_QTY, WM_ORDER_LINE_ITEM.UNITS_PAKD, WM_ORDER_LINE_ITEM.CUBE_MULTIPLE_QTY, WM_ORDER_LINE_ITEM.STD_PACK_QTY, WM_ORDER_LINE_ITEM.STD_PALLET_QTY, WM_ORDER_LINE_ITEM.STD_SUB_PACK_QTY, WM_ORDER_LINE_ITEM.STD_BUNDLE_QTY, WM_ORDER_LINE_ITEM.STD_LPN_QTY, WM_ORDER_LINE_ITEM.STD_LPN_VOL, WM_ORDER_LINE_ITEM.STD_LPN_WT, WM_ORDER_LINE_ITEM.LPN_SIZE, WM_ORDER_LINE_ITEM.QTY_CONV_FACTOR, WM_ORDER_LINE_ITEM.WM_QTY_UOM_ID, WM_ORDER_LINE_ITEM.WM_QTY_UOM_ID_BASE, WM_ORDER_LINE_ITEM.WM_MV_SIZE_UOM_ID, WM_ORDER_LINE_ITEM.PLANNED_WEIGHT, WM_ORDER_LINE_ITEM.RECEIVED_WEIGHT, WM_ORDER_LINE_ITEM.SHIPPED_WEIGHT, WM_ORDER_LINE_ITEM.WM_WEIGHT_UOM_ID_BASE, WM_ORDER_LINE_ITEM.WM_WEIGHT_UOM_ID, WM_ORDER_LINE_ITEM.PLANNED_VOLUME, WM_ORDER_LINE_ITEM.RECEIVED_VOLUME, WM_ORDER_LINE_ITEM.SHIPPED_VOLUME, WM_ORDER_LINE_ITEM.WM_VOLUME_UOM_ID_BASE, WM_ORDER_LINE_ITEM.WM_VOLUME_UOM_ID, WM_ORDER_LINE_ITEM.SIZE_1_VALUE, WM_ORDER_LINE_ITEM.RECEIVED_SIZE_1, WM_ORDER_LINE_ITEM.SHIPPED_SIZE_1, WM_ORDER_LINE_ITEM.WM_SIZE_1_UOM_ID, WM_ORDER_LINE_ITEM.SIZE_2_VALUE, WM_ORDER_LINE_ITEM.RECEIVED_SIZE_2, WM_ORDER_LINE_ITEM.SHIPPED_SIZE_2, WM_ORDER_LINE_ITEM.WM_SIZE_2_UOM_ID, WM_ORDER_LINE_ITEM.STACK_RANK, WM_ORDER_LINE_ITEM.STACK_LENGTH_VALUE, WM_ORDER_LINE_ITEM.WM_STACK_LENGTH_STANDARD_UOM, WM_ORDER_LINE_ITEM.STACK_WIDTH_VALUE, WM_ORDER_LINE_ITEM.WM_STACK_WIDTH_STANDARD_UOM, WM_ORDER_LINE_ITEM.STACK_HEIGHT_VALUE, WM_ORDER_LINE_ITEM.WM_STACK_HEIGHT_STANDARD_UOM, WM_ORDER_LINE_ITEM.STACK_DIAMETER_VALUE, WM_ORDER_LINE_ITEM.WM_STACK_DIAMETER_STANDARD_UOM, WM_ORDER_LINE_ITEM.FREIGHT_REVENUE, WM_ORDER_LINE_ITEM.FREIGHT_REVENUE_CURRENCY_CD, WM_ORDER_LINE_ITEM.ITEM_ATTR_1, WM_ORDER_LINE_ITEM.ITEM_ATTR_2, WM_ORDER_LINE_ITEM.ITEM_ATTR_3, WM_ORDER_LINE_ITEM.ITEM_ATTR_4, WM_ORDER_LINE_ITEM.ITEM_ATTR_5, WM_ORDER_LINE_ITEM.CRITCL_DIM_1, WM_ORDER_LINE_ITEM.CRITCL_DIM_2, WM_ORDER_LINE_ITEM.CRITCL_DIM_3, WM_ORDER_LINE_ITEM.REF_BOOLEAN_1, WM_ORDER_LINE_ITEM.REF_BOOLEAN_2, WM_ORDER_LINE_ITEM.REF_SYS_CD_1, WM_ORDER_LINE_ITEM.REF_SYS_CD_2, WM_ORDER_LINE_ITEM.REF_SYS_CD_3, WM_ORDER_LINE_ITEM.REF_FIELD_1, WM_ORDER_LINE_ITEM.REF_FIELD_2, WM_ORDER_LINE_ITEM.REF_FIELD_3, WM_ORDER_LINE_ITEM.REF_FIELD_4, WM_ORDER_LINE_ITEM.REF_FIELD_5, WM_ORDER_LINE_ITEM.REF_FIELD_6, WM_ORDER_LINE_ITEM.REF_FIELD_7, WM_ORDER_LINE_ITEM.REF_FIELD_8, WM_ORDER_LINE_ITEM.REF_FIELD_9, WM_ORDER_LINE_ITEM.REF_FIELD_10, WM_ORDER_LINE_ITEM.REF_NUM_1, WM_ORDER_LINE_ITEM.REF_NUM_2, WM_ORDER_LINE_ITEM.REF_NUM_3, WM_ORDER_LINE_ITEM.REF_NUM_4, WM_ORDER_LINE_ITEM.REF_NUM_5, WM_ORDER_LINE_ITEM.WM_HIBERNATE_VERSION, WM_ORDER_LINE_ITEM.WM_CREATED_SOURCE_TYPE, WM_ORDER_LINE_ITEM.WM_CREATED_SOURCE, WM_ORDER_LINE_ITEM.WM_CREATED_TSTMP, WM_ORDER_LINE_ITEM.WM_LAST_UPDATED_SOURCE_TYPE, WM_ORDER_LINE_ITEM.WM_LAST_UPDATED_SOURCE, WM_ORDER_LINE_ITEM.WM_LAST_UPDATED_TSTMP, WM_ORDER_LINE_ITEM.UPDATE_TSTMP, WM_ORDER_LINE_ITEM.LOAD_TSTMP FROM ADMIN.WM_ORDER_LINE_ITEM WHERE (DATE(WM_ORDER_LINE_ITEM.UPDATE_TSTMP) = ANY (SELECT EDW_PRD.ADMIN.DAYS.DAY_DT FROM EDW_PRD.ADMIN.DAYS WHERE (EDW_PRD.ADMIN.DAYS.FISCAL_QTR > 202203)));
